// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: dtp.api.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Dwjk.Dtp {

  /// <summary>Holder for reflection information generated from dtp.api.proto</summary>
  public static partial class DtpApiReflection {

    #region Descriptor
    /// <summary>File descriptor for dtp.api.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DtpApiReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1kdHAuYXBpLnByb3RvEghkd2prLmR0cBoOZHRwLnR5cGUucHJvdG8iQgoN",
            "UmVxdWVzdEhlYWRlchIOCgZhcGlfaWQYASABKA0SEgoKcmVxdWVzdF9pZBgC",
            "IAEoCRINCgV0b2tlbhgDIAEoCSJxCg5SZXNwb25zZUhlYWRlchIOCgZhcGlf",
            "aWQYASABKA0SEgoKcmVxdWVzdF9pZBgCIAEoCRIqCgRjb2RlGAMgASgOMhwu",
            "ZHdqay5kdHAuUmVzcG9uc2VTdGF0dXNDb2RlEg8KB21lc3NhZ2UYBCABKAki",
            "WwoMUmVwb3J0SGVhZGVyEg4KBmFwaV9pZBgBIAEoDRIqCgRjb2RlGAIgASgO",
            "MhwuZHdqay5kdHAuUmVzcG9uc2VTdGF0dXNDb2RlEg8KB21lc3NhZ2UYAyAB",
            "KAkiOwoTTG9naW5BY2NvdW50UmVxdWVzdBISCgphY2NvdW50X25vGAEgASgJ",
            "EhAKCHBhc3N3b3JkGAIgASgJIiUKFExvZ2luQWNjb3VudFJlc3BvbnNlEg0K",
            "BXRva2VuGAEgASgJIioKFExvZ291dEFjY291bnRSZXF1ZXN0EhIKCmFjY291",
            "bnRfbm8YASABKAkiFwoVTG9nb3V0QWNjb3VudFJlc3BvbnNlIuIBCgpQbGFj",
            "ZU9yZGVyEhIKCmFjY291bnRfbm8YASABKAkSGQoRb3JkZXJfb3JpZ2luYWxf",
            "aWQYAiABKAkSJAoIZXhjaGFuZ2UYAyABKA4yEi5kd2prLmR0cC5FeGNoYW5n",
            "ZRIMCgRjb2RlGAQgASgJEg0KBXByaWNlGAUgASgJEhAKCHF1YW50aXR5GAYg",
            "ASgNEicKCm9yZGVyX3NpZGUYByABKA4yEy5kd2prLmR0cC5PcmRlclNpZGUS",
            "JwoKb3JkZXJfdHlwZRgIIAEoDjITLmR3amsuZHRwLk9yZGVyVHlwZSJiCgtD",
            "YW5jZWxPcmRlchISCgphY2NvdW50X25vGAEgASgJEiQKCGV4Y2hhbmdlGAIg",
            "ASgOMhIuZHdqay5kdHAuRXhjaGFuZ2USGQoRb3JkZXJfZXhjaGFuZ2VfaWQY",
            "AyABKAkiuAIKD1BsYWNlQmF0Y2hPcmRlchISCgphY2NvdW50X25vGAEgASgJ",
            "EjwKCm9yZGVyX2xpc3QYAyADKAsyKC5kd2prLmR0cC5QbGFjZUJhdGNoT3Jk",
            "ZXIuQmF0Y2hPcmRlckl0ZW0a0gEKDkJhdGNoT3JkZXJJdGVtEiQKCGV4Y2hh",
            "bmdlGAEgASgOMhIuZHdqay5kdHAuRXhjaGFuZ2USDAoEY29kZRgCIAEoCRIn",
            "CgpvcmRlcl9zaWRlGAMgASgOMhMuZHdqay5kdHAuT3JkZXJTaWRlEg0KBXBy",
            "aWNlGAQgASgJEhAKCHF1YW50aXR5GAUgASgNEicKCm9yZGVyX3R5cGUYBiAB",
            "KA4yEy5kd2prLmR0cC5PcmRlclR5cGUSGQoRb3JkZXJfb3JpZ2luYWxfaWQY",
            "ByABKAkiqQIKDFBsYWNlZFJlcG9ydBIZChFvcmRlcl9leGNoYW5nZV9pZBgB",
            "IAEoCRITCgtwbGFjZWRfdGltZRgCIAEoCRIVCg1mcmVlemVfYW1vdW50GAMg",
            "ASgJEiUKBnN0YXR1cxgEIAEoDjIVLmR3amsuZHRwLk9yZGVyU3RhdHVzEhkK",
            "EW9yZGVyX29yaWdpbmFsX2lkGAUgASgJEhIKCmFjY291bnRfbm8YBiABKAkS",
            "JAoIZXhjaGFuZ2UYByABKA4yEi5kd2prLmR0cC5FeGNoYW5nZRIMCgRjb2Rl",
            "GAggASgJEhAKCHF1YW50aXR5GAkgASgNEicKCm9yZGVyX3NpZGUYCiABKA4y",
            "Ey5kd2prLmR0cC5PcmRlclNpZGUSDQoFcHJpY2UYCyABKAki3AMKCkZpbGxS",
            "ZXBvcnQSGAoQZmlsbF9leGNoYW5nZV9pZBgBIAEoCRIRCglmaWxsX3RpbWUY",
            "AiABKAkSKQoLZmlsbF9zdGF0dXMYAyABKA4yFC5kd2prLmR0cC5GaWxsU3Rh",
            "dHVzEhIKCmZpbGxfcHJpY2UYBCABKAkSFQoNZmlsbF9xdWFudGl0eRgFIAEo",
            "DRITCgtmaWxsX2Ftb3VudBgGIAEoCRIUCgxjbGVhcl9hbW91bnQYByABKAkS",
            "GwoTdG90YWxfZmlsbF9xdWFudGl0eRgIIAEoDRIZChF0b3RhbF9maWxsX2Ft",
            "b3VudBgJIAEoCRIgChh0b3RhbF9jYW5jZWxsZWRfcXVhbnRpdHkYCiABKA0S",
            "GQoRb3JkZXJfZXhjaGFuZ2VfaWQYCyABKAkSGQoRb3JkZXJfb3JpZ2luYWxf",
            "aWQYDCABKAkSEgoKYWNjb3VudF9ubxgNIAEoCRIkCghleGNoYW5nZRgOIAEo",
            "DjISLmR3amsuZHRwLkV4Y2hhbmdlEgwKBGNvZGUYDyABKAkSDQoFcHJpY2UY",
            "ECABKAkSEAoIcXVhbnRpdHkYESABKA0SJwoKb3JkZXJfc2lkZRgSIAEoDjIT",
            "LmR3amsuZHRwLk9yZGVyU2lkZSLEAgoSQ2FuY2VsbGF0aW9uUmVwb3J0EhkK",
            "EW9yZGVyX2V4Y2hhbmdlX2lkGAEgASgJEhkKEW9yZGVyX29yaWdpbmFsX2lk",
            "GAIgASgJEhIKCmFjY291bnRfbm8YAyABKAkSJAoIZXhjaGFuZ2UYBCABKA4y",
            "Ei5kd2prLmR0cC5FeGNoYW5nZRIMCgRjb2RlGAUgASgJEhAKCHF1YW50aXR5",
            "GAYgASgNEicKCm9yZGVyX3NpZGUYByABKA4yEy5kd2prLmR0cC5PcmRlclNp",
            "ZGUSJQoGc3RhdHVzGAggASgOMhUuZHdqay5kdHAuT3JkZXJTdGF0dXMSGwoT",
            "dG90YWxfZmlsbF9xdWFudGl0eRgJIAEoDRIaChJjYW5jZWxsZWRfcXVhbnRp",
            "dHkYCiABKA0SFQoNZnJlZXplX2Ftb3VudBgLIAEoCSKgAgoSUXVlcnlPcmRl",
            "cnNSZXF1ZXN0EhIKCmFjY291bnRfbm8YASABKAkSGQoRb3JkZXJfZXhjaGFu",
            "Z2VfaWQYAiABKAkSNAoOcXVlcnlfY3JpdGVyaWEYAyABKA4yHC5kd2prLmR0",
            "cC5RdWVyeU9yZGVyQ3JpdGVyaWESLQoKcGFnaW5hdGlvbhgEIAEoCzIZLmR3",
            "amsuZHRwLlF1ZXJ5UGFnaW5hdGlvbhIkCghleGNoYW5nZRgFIAEoDjISLmR3",
            "amsuZHRwLkV4Y2hhbmdlEgwKBGNvZGUYBiABKAkSGQoRb3JkZXJfb3JpZ2lu",
            "YWxfaWQYByABKAkSJwoKb3JkZXJfc2lkZRgIIAEoDjITLmR3amsuZHRwLk9y",
            "ZGVyU2lkZSL8BAoTUXVlcnlPcmRlcnNSZXNwb25zZRI3CgpvcmRlcl9saXN0",
            "GAEgAygLMiMuZHdqay5kdHAuUXVlcnlPcmRlcnNSZXNwb25zZS5PcmRlchIt",
            "CgpwYWdpbmF0aW9uGAIgASgLMhkuZHdqay5kdHAuUXVlcnlQYWdpbmF0aW9u",
            "GvwDCgVPcmRlchIZChFvcmRlcl9leGNoYW5nZV9pZBgBIAEoCRIZChFvcmRl",
            "cl9vcmlnaW5hbF9pZBgCIAEoCRIkCghleGNoYW5nZRgDIAEoDjISLmR3amsu",
            "ZHRwLkV4Y2hhbmdlEgwKBGNvZGUYBCABKAkSDAoEbmFtZRgFIAEoCRINCgVw",
            "cmljZRgGIAEoCRIQCghxdWFudGl0eRgHIAEoDRInCgpvcmRlcl9zaWRlGAgg",
            "ASgOMhMuZHdqay5kdHAuT3JkZXJTaWRlEicKCm9yZGVyX3R5cGUYCSABKA4y",
            "Ey5kd2prLmR0cC5PcmRlclR5cGUSJQoGc3RhdHVzGAogASgOMhUuZHdqay5k",
            "dHAuT3JkZXJTdGF0dXMSEgoKb3JkZXJfdGltZRgLIAEoCRISCgphY2NvdW50",
            "X25vGAwgASgJEhoKEmF2ZXJhZ2VfZmlsbF9wcmljZRgNIAEoCRIbChN0b3Rh",
            "bF9maWxsX3F1YW50aXR5GA4gASgNEhkKEXRvdGFsX2ZpbGxfYW1vdW50GA8g",
            "ASgJEhUKDWZyZWV6ZV9hbW91bnQYECABKAkSFAoMY2xlYXJfYW1vdW50GBEg",
            "ASgJEiAKGHRvdGFsX2NhbmNlbGxlZF9xdWFudGl0eRgSIAEoDRIWCg5zdGF0",
            "dXNfbWVzc2FnZRgTIAEoCSKGAgoRUXVlcnlGaWxsc1JlcXVlc3QSEgoKYWNj",
            "b3VudF9ubxgBIAEoCRIZChFvcmRlcl9leGNoYW5nZV9pZBgCIAEoCRItCgpw",
            "YWdpbmF0aW9uGAMgASgLMhkuZHdqay5kdHAuUXVlcnlQYWdpbmF0aW9uEiQK",
            "CGV4Y2hhbmdlGAQgASgOMhIuZHdqay5kdHAuRXhjaGFuZ2USDAoEY29kZRgF",
            "IAEoCRIZChFvcmRlcl9vcmlnaW5hbF9pZBgGIAEoCRInCgpvcmRlcl9zaWRl",
            "GAcgASgOMhMuZHdqay5kdHAuT3JkZXJTaWRlEhsKE2luY2x1ZGVfY2FuY2Vs",
            "X2ZpbGwYCCABKAgi0QMKElF1ZXJ5RmlsbHNSZXNwb25zZRI0CglmaWxsX2xp",
            "c3QYASADKAsyIS5kd2prLmR0cC5RdWVyeUZpbGxzUmVzcG9uc2UuRmlsbBIt",
            "CgpwYWdpbmF0aW9uGAIgASgLMhkuZHdqay5kdHAuUXVlcnlQYWdpbmF0aW9u",
            "GtUCCgRGaWxsEhgKEGZpbGxfZXhjaGFuZ2VfaWQYASABKAkSEQoJZmlsbF90",
            "aW1lGAIgASgJEikKC2ZpbGxfc3RhdHVzGAMgASgOMhQuZHdqay5kdHAuRmls",
            "bFN0YXR1cxISCgpmaWxsX3ByaWNlGAQgASgJEhUKDWZpbGxfcXVhbnRpdHkY",
            "BSABKA0SEwoLZmlsbF9hbW91bnQYBiABKAkSFAoMY2xlYXJfYW1vdW50GAcg",
            "ASgJEhkKEW9yZGVyX2V4Y2hhbmdlX2lkGAggASgJEhkKEW9yZGVyX29yaWdp",
            "bmFsX2lkGAkgASgJEiQKCGV4Y2hhbmdlGAogASgOMhIuZHdqay5kdHAuRXhj",
            "aGFuZ2USDAoEY29kZRgLIAEoCRIMCgRuYW1lGAwgASgJEicKCm9yZGVyX3Np",
            "ZGUYDSABKA4yEy5kd2prLmR0cC5PcmRlclNpZGUiKQoTUXVlcnlDYXBpdGFs",
            "UmVxdWVzdBISCgphY2NvdW50X25vGAEgASgJIoEBChRRdWVyeUNhcGl0YWxS",
            "ZXNwb25zZRISCgphY2NvdW50X25vGAEgASgJEg8KB2JhbGFuY2UYAiABKAkS",
            "EQoJYXZhaWxhYmxlGAMgASgJEg4KBmZyZWV6ZRgEIAEoCRISCgpzZWN1cml0",
            "aWVzGAUgASgJEg0KBXRvdGFsGAYgASgJIo0BChRRdWVyeVBvc2l0aW9uUmVx",
            "dWVzdBISCgphY2NvdW50X25vGAEgASgJEiQKCGV4Y2hhbmdlGAIgASgOMhIu",
            "ZHdqay5kdHAuRXhjaGFuZ2USDAoEY29kZRgDIAEoCRItCgpwYWdpbmF0aW9u",
            "GAQgASgLMhkuZHdqay5kdHAuUXVlcnlQYWdpbmF0aW9uIvkCChVRdWVyeVBv",
            "c2l0aW9uUmVzcG9uc2USRQoNcG9zaXRpb25fbGlzdBgBIAMoCzIuLmR3amsu",
            "ZHRwLlF1ZXJ5UG9zaXRpb25SZXNwb25zZS5Qb3NpdGlvbkRldGFpbBItCgpw",
            "YWdpbmF0aW9uGAIgASgLMhkuZHdqay5kdHAuUXVlcnlQYWdpbmF0aW9uGukB",
            "Cg5Qb3NpdGlvbkRldGFpbBIkCghleGNoYW5nZRgBIAEoDjISLmR3amsuZHRw",
            "LkV4Y2hhbmdlEgwKBGNvZGUYAiABKAkSDAoEbmFtZRgDIAEoCRIPCgdiYWxh",
            "bmNlGAQgASgDEhoKEmF2YWlsYWJsZV9xdWFudGl0eRgFIAEoAxIXCg9mcmVl",
            "emVfcXVhbnRpdHkYBiABKAUSFAoMYnV5X3F1YW50aXR5GAcgASgDEhUKDXNl",
            "bGxfcXVhbnRpdHkYCCABKAMSFAoMbWFya2V0X3ZhbHVlGAkgASgJEgwKBGNv",
            "c3QYCiABKAkiKAoSUXVlcnlSYXRpb25SZXF1ZXN0EhIKCmFjY291bnRfbm8Y",
            "ASABKAkipgEKE1F1ZXJ5UmF0aW9uUmVzcG9uc2USOQoLcmF0aW9uX2xpc3QY",
            "ASADKAsyJC5kd2prLmR0cC5RdWVyeVJhdGlvblJlc3BvbnNlLlJhdGlvbhpU",
            "CgZSYXRpb24SEgoKYWNjb3VudF9ubxgBIAEoCRIkCghleGNoYW5nZRgCIAEo",
            "DjISLmR3amsuZHRwLkV4Y2hhbmdlEhAKCHF1YW50aXR5GAMgASgNIi8KD1F1",
            "ZXJ5UGFnaW5hdGlvbhIOCgZvZmZzZXQYASABKA0SDAoEc2l6ZRgCIAEoDWIG",
            "cHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Dwjk.Dtp.DtpTypeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Dwjk.Dtp.RequestHeader), global::Dwjk.Dtp.RequestHeader.Parser, new[]{ "ApiId", "RequestId", "Token" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Dwjk.Dtp.ResponseHeader), global::Dwjk.Dtp.ResponseHeader.Parser, new[]{ "ApiId", "RequestId", "Code", "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Dwjk.Dtp.ReportHeader), global::Dwjk.Dtp.ReportHeader.Parser, new[]{ "ApiId", "Code", "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Dwjk.Dtp.LoginAccountRequest), global::Dwjk.Dtp.LoginAccountRequest.Parser, new[]{ "AccountNo", "Password" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Dwjk.Dtp.LoginAccountResponse), global::Dwjk.Dtp.LoginAccountResponse.Parser, new[]{ "Token" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Dwjk.Dtp.LogoutAccountRequest), global::Dwjk.Dtp.LogoutAccountRequest.Parser, new[]{ "AccountNo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Dwjk.Dtp.LogoutAccountResponse), global::Dwjk.Dtp.LogoutAccountResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Dwjk.Dtp.PlaceOrder), global::Dwjk.Dtp.PlaceOrder.Parser, new[]{ "AccountNo", "OrderOriginalId", "Exchange", "Code", "Price", "Quantity", "OrderSide", "OrderType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Dwjk.Dtp.CancelOrder), global::Dwjk.Dtp.CancelOrder.Parser, new[]{ "AccountNo", "Exchange", "OrderExchangeId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Dwjk.Dtp.PlaceBatchOrder), global::Dwjk.Dtp.PlaceBatchOrder.Parser, new[]{ "AccountNo", "OrderList" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Dwjk.Dtp.PlaceBatchOrder.Types.BatchOrderItem), global::Dwjk.Dtp.PlaceBatchOrder.Types.BatchOrderItem.Parser, new[]{ "Exchange", "Code", "OrderSide", "Price", "Quantity", "OrderType", "OrderOriginalId" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Dwjk.Dtp.PlacedReport), global::Dwjk.Dtp.PlacedReport.Parser, new[]{ "OrderExchangeId", "PlacedTime", "FreezeAmount", "Status", "OrderOriginalId", "AccountNo", "Exchange", "Code", "Quantity", "OrderSide", "Price" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Dwjk.Dtp.FillReport), global::Dwjk.Dtp.FillReport.Parser, new[]{ "FillExchangeId", "FillTime", "FillStatus", "FillPrice", "FillQuantity", "FillAmount", "ClearAmount", "TotalFillQuantity", "TotalFillAmount", "TotalCancelledQuantity", "OrderExchangeId", "OrderOriginalId", "AccountNo", "Exchange", "Code", "Price", "Quantity", "OrderSide" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Dwjk.Dtp.CancellationReport), global::Dwjk.Dtp.CancellationReport.Parser, new[]{ "OrderExchangeId", "OrderOriginalId", "AccountNo", "Exchange", "Code", "Quantity", "OrderSide", "Status", "TotalFillQuantity", "CancelledQuantity", "FreezeAmount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Dwjk.Dtp.QueryOrdersRequest), global::Dwjk.Dtp.QueryOrdersRequest.Parser, new[]{ "AccountNo", "OrderExchangeId", "QueryCriteria", "Pagination", "Exchange", "Code", "OrderOriginalId", "OrderSide" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Dwjk.Dtp.QueryOrdersResponse), global::Dwjk.Dtp.QueryOrdersResponse.Parser, new[]{ "OrderList", "Pagination" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Dwjk.Dtp.QueryOrdersResponse.Types.Order), global::Dwjk.Dtp.QueryOrdersResponse.Types.Order.Parser, new[]{ "OrderExchangeId", "OrderOriginalId", "Exchange", "Code", "Name", "Price", "Quantity", "OrderSide", "OrderType", "Status", "OrderTime", "AccountNo", "AverageFillPrice", "TotalFillQuantity", "TotalFillAmount", "FreezeAmount", "ClearAmount", "TotalCancelledQuantity", "StatusMessage" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Dwjk.Dtp.QueryFillsRequest), global::Dwjk.Dtp.QueryFillsRequest.Parser, new[]{ "AccountNo", "OrderExchangeId", "Pagination", "Exchange", "Code", "OrderOriginalId", "OrderSide", "IncludeCancelFill" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Dwjk.Dtp.QueryFillsResponse), global::Dwjk.Dtp.QueryFillsResponse.Parser, new[]{ "FillList", "Pagination" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Dwjk.Dtp.QueryFillsResponse.Types.Fill), global::Dwjk.Dtp.QueryFillsResponse.Types.Fill.Parser, new[]{ "FillExchangeId", "FillTime", "FillStatus", "FillPrice", "FillQuantity", "FillAmount", "ClearAmount", "OrderExchangeId", "OrderOriginalId", "Exchange", "Code", "Name", "OrderSide" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Dwjk.Dtp.QueryCapitalRequest), global::Dwjk.Dtp.QueryCapitalRequest.Parser, new[]{ "AccountNo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Dwjk.Dtp.QueryCapitalResponse), global::Dwjk.Dtp.QueryCapitalResponse.Parser, new[]{ "AccountNo", "Balance", "Available", "Freeze", "Securities", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Dwjk.Dtp.QueryPositionRequest), global::Dwjk.Dtp.QueryPositionRequest.Parser, new[]{ "AccountNo", "Exchange", "Code", "Pagination" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Dwjk.Dtp.QueryPositionResponse), global::Dwjk.Dtp.QueryPositionResponse.Parser, new[]{ "PositionList", "Pagination" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Dwjk.Dtp.QueryPositionResponse.Types.PositionDetail), global::Dwjk.Dtp.QueryPositionResponse.Types.PositionDetail.Parser, new[]{ "Exchange", "Code", "Name", "Balance", "AvailableQuantity", "FreezeQuantity", "BuyQuantity", "SellQuantity", "MarketValue", "Cost" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Dwjk.Dtp.QueryRationRequest), global::Dwjk.Dtp.QueryRationRequest.Parser, new[]{ "AccountNo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Dwjk.Dtp.QueryRationResponse), global::Dwjk.Dtp.QueryRationResponse.Parser, new[]{ "RationList" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Dwjk.Dtp.QueryRationResponse.Types.Ration), global::Dwjk.Dtp.QueryRationResponse.Types.Ration.Parser, new[]{ "AccountNo", "Exchange", "Quantity" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Dwjk.Dtp.QueryPagination), global::Dwjk.Dtp.QueryPagination.Parser, new[]{ "Offset", "Size" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class RequestHeader : pb::IMessage<RequestHeader> {
    private static readonly pb::MessageParser<RequestHeader> _parser = new pb::MessageParser<RequestHeader>(() => new RequestHeader());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestHeader> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dwjk.Dtp.DtpApiReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestHeader() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestHeader(RequestHeader other) : this() {
      apiId_ = other.apiId_;
      requestId_ = other.requestId_;
      token_ = other.token_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestHeader Clone() {
      return new RequestHeader(this);
    }

    /// <summary>Field number for the "api_id" field.</summary>
    public const int ApiIdFieldNumber = 1;
    private uint apiId_;
    /// <summary>
    /// API编号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ApiId {
      get { return apiId_; }
      set {
        apiId_ = value;
      }
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 2;
    private string requestId_ = "";
    /// <summary>
    /// 请求唯一标识UUID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequestId {
      get { return requestId_; }
      set {
        requestId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 3;
    private string token_ = "";
    /// <summary>
    /// 所有接口请求都需带上该标识,除了LoginRequest.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestHeader);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestHeader other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ApiId != other.ApiId) return false;
      if (RequestId != other.RequestId) return false;
      if (Token != other.Token) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ApiId != 0) hash ^= ApiId.GetHashCode();
      if (RequestId.Length != 0) hash ^= RequestId.GetHashCode();
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ApiId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ApiId);
      }
      if (RequestId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RequestId);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ApiId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ApiId);
      }
      if (RequestId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestId);
      }
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestHeader other) {
      if (other == null) {
        return;
      }
      if (other.ApiId != 0) {
        ApiId = other.ApiId;
      }
      if (other.RequestId.Length != 0) {
        RequestId = other.RequestId;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ApiId = input.ReadUInt32();
            break;
          }
          case 18: {
            RequestId = input.ReadString();
            break;
          }
          case 26: {
            Token = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ResponseHeader : pb::IMessage<ResponseHeader> {
    private static readonly pb::MessageParser<ResponseHeader> _parser = new pb::MessageParser<ResponseHeader>(() => new ResponseHeader());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResponseHeader> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dwjk.Dtp.DtpApiReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseHeader() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseHeader(ResponseHeader other) : this() {
      apiId_ = other.apiId_;
      requestId_ = other.requestId_;
      code_ = other.code_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseHeader Clone() {
      return new ResponseHeader(this);
    }

    /// <summary>Field number for the "api_id" field.</summary>
    public const int ApiIdFieldNumber = 1;
    private uint apiId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ApiId {
      get { return apiId_; }
      set {
        apiId_ = value;
      }
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 2;
    private string requestId_ = "";
    /// <summary>
    /// 带回相应Request的request_id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequestId {
      get { return requestId_; }
      set {
        requestId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 3;
    private global::Dwjk.Dtp.ResponseStatusCode code_ = 0;
    /// <summary>
    /// (TBD)Response的各种非法响应在实际调用中是否存在？
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Dwjk.Dtp.ResponseStatusCode Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 4;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResponseHeader);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResponseHeader other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ApiId != other.ApiId) return false;
      if (RequestId != other.RequestId) return false;
      if (Code != other.Code) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ApiId != 0) hash ^= ApiId.GetHashCode();
      if (RequestId.Length != 0) hash ^= RequestId.GetHashCode();
      if (Code != 0) hash ^= Code.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ApiId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ApiId);
      }
      if (RequestId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RequestId);
      }
      if (Code != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Code);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ApiId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ApiId);
      }
      if (RequestId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestId);
      }
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResponseHeader other) {
      if (other == null) {
        return;
      }
      if (other.ApiId != 0) {
        ApiId = other.ApiId;
      }
      if (other.RequestId.Length != 0) {
        RequestId = other.RequestId;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ApiId = input.ReadUInt32();
            break;
          }
          case 18: {
            RequestId = input.ReadString();
            break;
          }
          case 24: {
            code_ = (global::Dwjk.Dtp.ResponseStatusCode) input.ReadEnum();
            break;
          }
          case 34: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReportHeader : pb::IMessage<ReportHeader> {
    private static readonly pb::MessageParser<ReportHeader> _parser = new pb::MessageParser<ReportHeader>(() => new ReportHeader());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReportHeader> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dwjk.Dtp.DtpApiReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReportHeader() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReportHeader(ReportHeader other) : this() {
      apiId_ = other.apiId_;
      code_ = other.code_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReportHeader Clone() {
      return new ReportHeader(this);
    }

    /// <summary>Field number for the "api_id" field.</summary>
    public const int ApiIdFieldNumber = 1;
    private uint apiId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ApiId {
      get { return apiId_; }
      set {
        apiId_ = value;
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 2;
    private global::Dwjk.Dtp.ResponseStatusCode code_ = 0;
    /// <summary>
    /// (TBD)细化约定
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Dwjk.Dtp.ResponseStatusCode Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 3;
    private string message_ = "";
    /// <summary>
    /// 例: 违规
    /// ResponseHeader.ResponseStatusCode = RESPONSE_CODE_FORBIDDEN
    /// ResponseHeader.message = 违规信息
    /// 例: 柜台拒绝
    /// ResponseHeader.ResponseStatusCode = RESPONSE_CODE_FORBIDDEN
    /// ResponseHeader.message = 无法连接柜台/碎股/验资验券?
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReportHeader);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReportHeader other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ApiId != other.ApiId) return false;
      if (Code != other.Code) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ApiId != 0) hash ^= ApiId.GetHashCode();
      if (Code != 0) hash ^= Code.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ApiId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ApiId);
      }
      if (Code != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Code);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ApiId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ApiId);
      }
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReportHeader other) {
      if (other == null) {
        return;
      }
      if (other.ApiId != 0) {
        ApiId = other.ApiId;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ApiId = input.ReadUInt32();
            break;
          }
          case 16: {
            code_ = (global::Dwjk.Dtp.ResponseStatusCode) input.ReadEnum();
            break;
          }
          case 26: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// MUST: RequestHeader.api_id = 10001001，token不用填
  /// </summary>
  public sealed partial class LoginAccountRequest : pb::IMessage<LoginAccountRequest> {
    private static readonly pb::MessageParser<LoginAccountRequest> _parser = new pb::MessageParser<LoginAccountRequest>(() => new LoginAccountRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginAccountRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dwjk.Dtp.DtpApiReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginAccountRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginAccountRequest(LoginAccountRequest other) : this() {
      accountNo_ = other.accountNo_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginAccountRequest Clone() {
      return new LoginAccountRequest(this);
    }

    /// <summary>Field number for the "account_no" field.</summary>
    public const int AccountNoFieldNumber = 1;
    private string accountNo_ = "";
    /// <summary>
    /// 资金账号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccountNo {
      get { return accountNo_; }
      set {
        accountNo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginAccountRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginAccountRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountNo != other.AccountNo) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccountNo.Length != 0) hash ^= AccountNo.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AccountNo.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AccountNo);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccountNo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountNo);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginAccountRequest other) {
      if (other == null) {
        return;
      }
      if (other.AccountNo.Length != 0) {
        AccountNo = other.AccountNo;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AccountNo = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// MUST: ResponseHeader.api_id = 11001001
  /// </summary>
  public sealed partial class LoginAccountResponse : pb::IMessage<LoginAccountResponse> {
    private static readonly pb::MessageParser<LoginAccountResponse> _parser = new pb::MessageParser<LoginAccountResponse>(() => new LoginAccountResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginAccountResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dwjk.Dtp.DtpApiReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginAccountResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginAccountResponse(LoginAccountResponse other) : this() {
      token_ = other.token_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginAccountResponse Clone() {
      return new LoginAccountResponse(this);
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 1;
    private string token_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginAccountResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginAccountResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Token != other.Token) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Token.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginAccountResponse other) {
      if (other == null) {
        return;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Token = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// MUST: RequestHeader.api_id = 10001002
  /// </summary>
  public sealed partial class LogoutAccountRequest : pb::IMessage<LogoutAccountRequest> {
    private static readonly pb::MessageParser<LogoutAccountRequest> _parser = new pb::MessageParser<LogoutAccountRequest>(() => new LogoutAccountRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LogoutAccountRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dwjk.Dtp.DtpApiReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogoutAccountRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogoutAccountRequest(LogoutAccountRequest other) : this() {
      accountNo_ = other.accountNo_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogoutAccountRequest Clone() {
      return new LogoutAccountRequest(this);
    }

    /// <summary>Field number for the "account_no" field.</summary>
    public const int AccountNoFieldNumber = 1;
    private string accountNo_ = "";
    /// <summary>
    /// 资金账号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccountNo {
      get { return accountNo_; }
      set {
        accountNo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LogoutAccountRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LogoutAccountRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountNo != other.AccountNo) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccountNo.Length != 0) hash ^= AccountNo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AccountNo.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AccountNo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccountNo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountNo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LogoutAccountRequest other) {
      if (other == null) {
        return;
      }
      if (other.AccountNo.Length != 0) {
        AccountNo = other.AccountNo;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AccountNo = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// MUST: ResponseHeader.api_id = 11001002
  /// </summary>
  public sealed partial class LogoutAccountResponse : pb::IMessage<LogoutAccountResponse> {
    private static readonly pb::MessageParser<LogoutAccountResponse> _parser = new pb::MessageParser<LogoutAccountResponse>(() => new LogoutAccountResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LogoutAccountResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dwjk.Dtp.DtpApiReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogoutAccountResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogoutAccountResponse(LogoutAccountResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogoutAccountResponse Clone() {
      return new LogoutAccountResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LogoutAccountResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LogoutAccountResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LogoutAccountResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// MUST: RequestHeader.api_id = 10002001
  /// </summary>
  public sealed partial class PlaceOrder : pb::IMessage<PlaceOrder> {
    private static readonly pb::MessageParser<PlaceOrder> _parser = new pb::MessageParser<PlaceOrder>(() => new PlaceOrder());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlaceOrder> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dwjk.Dtp.DtpApiReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlaceOrder() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlaceOrder(PlaceOrder other) : this() {
      accountNo_ = other.accountNo_;
      orderOriginalId_ = other.orderOriginalId_;
      exchange_ = other.exchange_;
      code_ = other.code_;
      price_ = other.price_;
      quantity_ = other.quantity_;
      orderSide_ = other.orderSide_;
      orderType_ = other.orderType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlaceOrder Clone() {
      return new PlaceOrder(this);
    }

    /// <summary>Field number for the "account_no" field.</summary>
    public const int AccountNoFieldNumber = 1;
    private string accountNo_ = "";
    /// <summary>
    /// 资金账号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccountNo {
      get { return accountNo_; }
      set {
        accountNo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "order_original_id" field.</summary>
    public const int OrderOriginalIdFieldNumber = 2;
    private string orderOriginalId_ = "";
    /// <summary>
    /// 客户委托号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderOriginalId {
      get { return orderOriginalId_; }
      set {
        orderOriginalId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "exchange" field.</summary>
    public const int ExchangeFieldNumber = 3;
    private global::Dwjk.Dtp.Exchange exchange_ = 0;
    /// <summary>
    /// 交易所
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Dwjk.Dtp.Exchange Exchange {
      get { return exchange_; }
      set {
        exchange_ = value;
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 4;
    private string code_ = "";
    /// <summary>
    /// 证券代码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 5;
    private string price_ = "";
    /// <summary>
    /// 价格留3位小数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Price {
      get { return price_; }
      set {
        price_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "quantity" field.</summary>
    public const int QuantityFieldNumber = 6;
    private uint quantity_;
    /// <summary>
    /// 委托数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Quantity {
      get { return quantity_; }
      set {
        quantity_ = value;
      }
    }

    /// <summary>Field number for the "order_side" field.</summary>
    public const int OrderSideFieldNumber = 7;
    private global::Dwjk.Dtp.OrderSide orderSide_ = 0;
    /// <summary>
    /// 委托方向
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Dwjk.Dtp.OrderSide OrderSide {
      get { return orderSide_; }
      set {
        orderSide_ = value;
      }
    }

    /// <summary>Field number for the "order_type" field.</summary>
    public const int OrderTypeFieldNumber = 8;
    private global::Dwjk.Dtp.OrderType orderType_ = 0;
    /// <summary>
    /// 委托竞价类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Dwjk.Dtp.OrderType OrderType {
      get { return orderType_; }
      set {
        orderType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlaceOrder);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlaceOrder other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountNo != other.AccountNo) return false;
      if (OrderOriginalId != other.OrderOriginalId) return false;
      if (Exchange != other.Exchange) return false;
      if (Code != other.Code) return false;
      if (Price != other.Price) return false;
      if (Quantity != other.Quantity) return false;
      if (OrderSide != other.OrderSide) return false;
      if (OrderType != other.OrderType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccountNo.Length != 0) hash ^= AccountNo.GetHashCode();
      if (OrderOriginalId.Length != 0) hash ^= OrderOriginalId.GetHashCode();
      if (Exchange != 0) hash ^= Exchange.GetHashCode();
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      if (Price.Length != 0) hash ^= Price.GetHashCode();
      if (Quantity != 0) hash ^= Quantity.GetHashCode();
      if (OrderSide != 0) hash ^= OrderSide.GetHashCode();
      if (OrderType != 0) hash ^= OrderType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AccountNo.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AccountNo);
      }
      if (OrderOriginalId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(OrderOriginalId);
      }
      if (Exchange != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Exchange);
      }
      if (Code.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Code);
      }
      if (Price.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Price);
      }
      if (Quantity != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Quantity);
      }
      if (OrderSide != 0) {
        output.WriteRawTag(56);
        output.WriteEnum((int) OrderSide);
      }
      if (OrderType != 0) {
        output.WriteRawTag(64);
        output.WriteEnum((int) OrderType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccountNo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountNo);
      }
      if (OrderOriginalId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderOriginalId);
      }
      if (Exchange != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Exchange);
      }
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (Price.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Price);
      }
      if (Quantity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Quantity);
      }
      if (OrderSide != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OrderSide);
      }
      if (OrderType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OrderType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlaceOrder other) {
      if (other == null) {
        return;
      }
      if (other.AccountNo.Length != 0) {
        AccountNo = other.AccountNo;
      }
      if (other.OrderOriginalId.Length != 0) {
        OrderOriginalId = other.OrderOriginalId;
      }
      if (other.Exchange != 0) {
        Exchange = other.Exchange;
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
      if (other.Price.Length != 0) {
        Price = other.Price;
      }
      if (other.Quantity != 0) {
        Quantity = other.Quantity;
      }
      if (other.OrderSide != 0) {
        OrderSide = other.OrderSide;
      }
      if (other.OrderType != 0) {
        OrderType = other.OrderType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AccountNo = input.ReadString();
            break;
          }
          case 18: {
            OrderOriginalId = input.ReadString();
            break;
          }
          case 24: {
            exchange_ = (global::Dwjk.Dtp.Exchange) input.ReadEnum();
            break;
          }
          case 34: {
            Code = input.ReadString();
            break;
          }
          case 42: {
            Price = input.ReadString();
            break;
          }
          case 48: {
            Quantity = input.ReadUInt32();
            break;
          }
          case 56: {
            orderSide_ = (global::Dwjk.Dtp.OrderSide) input.ReadEnum();
            break;
          }
          case 64: {
            orderType_ = (global::Dwjk.Dtp.OrderType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// MUST: RequestHeader.api_id = 10002002
  /// </summary>
  public sealed partial class CancelOrder : pb::IMessage<CancelOrder> {
    private static readonly pb::MessageParser<CancelOrder> _parser = new pb::MessageParser<CancelOrder>(() => new CancelOrder());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CancelOrder> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dwjk.Dtp.DtpApiReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelOrder() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelOrder(CancelOrder other) : this() {
      accountNo_ = other.accountNo_;
      exchange_ = other.exchange_;
      orderExchangeId_ = other.orderExchangeId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelOrder Clone() {
      return new CancelOrder(this);
    }

    /// <summary>Field number for the "account_no" field.</summary>
    public const int AccountNoFieldNumber = 1;
    private string accountNo_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccountNo {
      get { return accountNo_; }
      set {
        accountNo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "exchange" field.</summary>
    public const int ExchangeFieldNumber = 2;
    private global::Dwjk.Dtp.Exchange exchange_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Dwjk.Dtp.Exchange Exchange {
      get { return exchange_; }
      set {
        exchange_ = value;
      }
    }

    /// <summary>Field number for the "order_exchange_id" field.</summary>
    public const int OrderExchangeIdFieldNumber = 3;
    private string orderExchangeId_ = "";
    /// <summary>
    /// 要撤的委托：交易所委托号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderExchangeId {
      get { return orderExchangeId_; }
      set {
        orderExchangeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CancelOrder);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CancelOrder other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountNo != other.AccountNo) return false;
      if (Exchange != other.Exchange) return false;
      if (OrderExchangeId != other.OrderExchangeId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccountNo.Length != 0) hash ^= AccountNo.GetHashCode();
      if (Exchange != 0) hash ^= Exchange.GetHashCode();
      if (OrderExchangeId.Length != 0) hash ^= OrderExchangeId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AccountNo.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AccountNo);
      }
      if (Exchange != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Exchange);
      }
      if (OrderExchangeId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(OrderExchangeId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccountNo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountNo);
      }
      if (Exchange != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Exchange);
      }
      if (OrderExchangeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderExchangeId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CancelOrder other) {
      if (other == null) {
        return;
      }
      if (other.AccountNo.Length != 0) {
        AccountNo = other.AccountNo;
      }
      if (other.Exchange != 0) {
        Exchange = other.Exchange;
      }
      if (other.OrderExchangeId.Length != 0) {
        OrderExchangeId = other.OrderExchangeId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AccountNo = input.ReadString();
            break;
          }
          case 16: {
            exchange_ = (global::Dwjk.Dtp.Exchange) input.ReadEnum();
            break;
          }
          case 26: {
            OrderExchangeId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///*********************************************
  /// 批量操作API
  ///*********************************************
  /// </summary>
  public sealed partial class PlaceBatchOrder : pb::IMessage<PlaceBatchOrder> {
    private static readonly pb::MessageParser<PlaceBatchOrder> _parser = new pb::MessageParser<PlaceBatchOrder>(() => new PlaceBatchOrder());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlaceBatchOrder> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dwjk.Dtp.DtpApiReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlaceBatchOrder() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlaceBatchOrder(PlaceBatchOrder other) : this() {
      accountNo_ = other.accountNo_;
      orderList_ = other.orderList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlaceBatchOrder Clone() {
      return new PlaceBatchOrder(this);
    }

    /// <summary>Field number for the "account_no" field.</summary>
    public const int AccountNoFieldNumber = 1;
    private string accountNo_ = "";
    /// <summary>
    /// 资金账号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccountNo {
      get { return accountNo_; }
      set {
        accountNo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "order_list" field.</summary>
    public const int OrderListFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Dwjk.Dtp.PlaceBatchOrder.Types.BatchOrderItem> _repeated_orderList_codec
        = pb::FieldCodec.ForMessage(26, global::Dwjk.Dtp.PlaceBatchOrder.Types.BatchOrderItem.Parser);
    private readonly pbc::RepeatedField<global::Dwjk.Dtp.PlaceBatchOrder.Types.BatchOrderItem> orderList_ = new pbc::RepeatedField<global::Dwjk.Dtp.PlaceBatchOrder.Types.BatchOrderItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Dwjk.Dtp.PlaceBatchOrder.Types.BatchOrderItem> OrderList {
      get { return orderList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlaceBatchOrder);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlaceBatchOrder other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountNo != other.AccountNo) return false;
      if(!orderList_.Equals(other.orderList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccountNo.Length != 0) hash ^= AccountNo.GetHashCode();
      hash ^= orderList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AccountNo.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AccountNo);
      }
      orderList_.WriteTo(output, _repeated_orderList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccountNo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountNo);
      }
      size += orderList_.CalculateSize(_repeated_orderList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlaceBatchOrder other) {
      if (other == null) {
        return;
      }
      if (other.AccountNo.Length != 0) {
        AccountNo = other.AccountNo;
      }
      orderList_.Add(other.orderList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AccountNo = input.ReadString();
            break;
          }
          case 26: {
            orderList_.AddEntriesFrom(input, _repeated_orderList_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the PlaceBatchOrder message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class BatchOrderItem : pb::IMessage<BatchOrderItem> {
        private static readonly pb::MessageParser<BatchOrderItem> _parser = new pb::MessageParser<BatchOrderItem>(() => new BatchOrderItem());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<BatchOrderItem> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Dwjk.Dtp.PlaceBatchOrder.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BatchOrderItem() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BatchOrderItem(BatchOrderItem other) : this() {
          exchange_ = other.exchange_;
          code_ = other.code_;
          orderSide_ = other.orderSide_;
          price_ = other.price_;
          quantity_ = other.quantity_;
          orderType_ = other.orderType_;
          orderOriginalId_ = other.orderOriginalId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BatchOrderItem Clone() {
          return new BatchOrderItem(this);
        }

        /// <summary>Field number for the "exchange" field.</summary>
        public const int ExchangeFieldNumber = 1;
        private global::Dwjk.Dtp.Exchange exchange_ = 0;
        /// <summary>
        /// 交易所
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Dwjk.Dtp.Exchange Exchange {
          get { return exchange_; }
          set {
            exchange_ = value;
          }
        }

        /// <summary>Field number for the "code" field.</summary>
        public const int CodeFieldNumber = 2;
        private string code_ = "";
        /// <summary>
        /// 证券代码
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Code {
          get { return code_; }
          set {
            code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "order_side" field.</summary>
        public const int OrderSideFieldNumber = 3;
        private global::Dwjk.Dtp.OrderSide orderSide_ = 0;
        /// <summary>
        /// 委托方向，只支持买卖
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Dwjk.Dtp.OrderSide OrderSide {
          get { return orderSide_; }
          set {
            orderSide_ = value;
          }
        }

        /// <summary>Field number for the "price" field.</summary>
        public const int PriceFieldNumber = 4;
        private string price_ = "";
        /// <summary>
        /// 价格留3位小数
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Price {
          get { return price_; }
          set {
            price_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "quantity" field.</summary>
        public const int QuantityFieldNumber = 5;
        private uint quantity_;
        /// <summary>
        /// 委托数量
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Quantity {
          get { return quantity_; }
          set {
            quantity_ = value;
          }
        }

        /// <summary>Field number for the "order_type" field.</summary>
        public const int OrderTypeFieldNumber = 6;
        private global::Dwjk.Dtp.OrderType orderType_ = 0;
        /// <summary>
        /// 委托竞价类型
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Dwjk.Dtp.OrderType OrderType {
          get { return orderType_; }
          set {
            orderType_ = value;
          }
        }

        /// <summary>Field number for the "order_original_id" field.</summary>
        public const int OrderOriginalIdFieldNumber = 7;
        private string orderOriginalId_ = "";
        /// <summary>
        /// 客户委托号
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string OrderOriginalId {
          get { return orderOriginalId_; }
          set {
            orderOriginalId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as BatchOrderItem);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(BatchOrderItem other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Exchange != other.Exchange) return false;
          if (Code != other.Code) return false;
          if (OrderSide != other.OrderSide) return false;
          if (Price != other.Price) return false;
          if (Quantity != other.Quantity) return false;
          if (OrderType != other.OrderType) return false;
          if (OrderOriginalId != other.OrderOriginalId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Exchange != 0) hash ^= Exchange.GetHashCode();
          if (Code.Length != 0) hash ^= Code.GetHashCode();
          if (OrderSide != 0) hash ^= OrderSide.GetHashCode();
          if (Price.Length != 0) hash ^= Price.GetHashCode();
          if (Quantity != 0) hash ^= Quantity.GetHashCode();
          if (OrderType != 0) hash ^= OrderType.GetHashCode();
          if (OrderOriginalId.Length != 0) hash ^= OrderOriginalId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Exchange != 0) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Exchange);
          }
          if (Code.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Code);
          }
          if (OrderSide != 0) {
            output.WriteRawTag(24);
            output.WriteEnum((int) OrderSide);
          }
          if (Price.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(Price);
          }
          if (Quantity != 0) {
            output.WriteRawTag(40);
            output.WriteUInt32(Quantity);
          }
          if (OrderType != 0) {
            output.WriteRawTag(48);
            output.WriteEnum((int) OrderType);
          }
          if (OrderOriginalId.Length != 0) {
            output.WriteRawTag(58);
            output.WriteString(OrderOriginalId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Exchange != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Exchange);
          }
          if (Code.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
          }
          if (OrderSide != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OrderSide);
          }
          if (Price.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Price);
          }
          if (Quantity != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Quantity);
          }
          if (OrderType != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OrderType);
          }
          if (OrderOriginalId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderOriginalId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(BatchOrderItem other) {
          if (other == null) {
            return;
          }
          if (other.Exchange != 0) {
            Exchange = other.Exchange;
          }
          if (other.Code.Length != 0) {
            Code = other.Code;
          }
          if (other.OrderSide != 0) {
            OrderSide = other.OrderSide;
          }
          if (other.Price.Length != 0) {
            Price = other.Price;
          }
          if (other.Quantity != 0) {
            Quantity = other.Quantity;
          }
          if (other.OrderType != 0) {
            OrderType = other.OrderType;
          }
          if (other.OrderOriginalId.Length != 0) {
            OrderOriginalId = other.OrderOriginalId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                exchange_ = (global::Dwjk.Dtp.Exchange) input.ReadEnum();
                break;
              }
              case 18: {
                Code = input.ReadString();
                break;
              }
              case 24: {
                orderSide_ = (global::Dwjk.Dtp.OrderSide) input.ReadEnum();
                break;
              }
              case 34: {
                Price = input.ReadString();
                break;
              }
              case 40: {
                Quantity = input.ReadUInt32();
                break;
              }
              case 48: {
                orderType_ = (global::Dwjk.Dtp.OrderType) input.ReadEnum();
                break;
              }
              case 58: {
                OrderOriginalId = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  /// <summary>
  /// MUST: ReportHeader.api_id = 20001001
  /// </summary>
  public sealed partial class PlacedReport : pb::IMessage<PlacedReport> {
    private static readonly pb::MessageParser<PlacedReport> _parser = new pb::MessageParser<PlacedReport>(() => new PlacedReport());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlacedReport> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dwjk.Dtp.DtpApiReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlacedReport() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlacedReport(PlacedReport other) : this() {
      orderExchangeId_ = other.orderExchangeId_;
      placedTime_ = other.placedTime_;
      freezeAmount_ = other.freezeAmount_;
      status_ = other.status_;
      orderOriginalId_ = other.orderOriginalId_;
      accountNo_ = other.accountNo_;
      exchange_ = other.exchange_;
      code_ = other.code_;
      quantity_ = other.quantity_;
      orderSide_ = other.orderSide_;
      price_ = other.price_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlacedReport Clone() {
      return new PlacedReport(this);
    }

    /// <summary>Field number for the "order_exchange_id" field.</summary>
    public const int OrderExchangeIdFieldNumber = 1;
    private string orderExchangeId_ = "";
    /// <summary>
    /// 交易所委托号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderExchangeId {
      get { return orderExchangeId_; }
      set {
        orderExchangeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "placed_time" field.</summary>
    public const int PlacedTimeFieldNumber = 2;
    private string placedTime_ = "";
    /// <summary>
    /// 交易所委托确认时间,单位毫秒,不存日期 ;顶点柜台返回的是 HH:MM:SS 格式，推断交易所返回的也是这个格式，所以改成字符串格式 yinwb
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlacedTime {
      get { return placedTime_; }
      set {
        placedTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "freeze_amount" field.</summary>
    public const int FreezeAmountFieldNumber = 3;
    private string freezeAmount_ = "";
    /// <summary>
    /// 冻结金额(负数表示解冻)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FreezeAmount {
      get { return freezeAmount_; }
      set {
        freezeAmount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 4;
    private global::Dwjk.Dtp.OrderStatus status_ = 0;
    /// <summary>
    /// 委托状态: 申报结果
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Dwjk.Dtp.OrderStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "order_original_id" field.</summary>
    public const int OrderOriginalIdFieldNumber = 5;
    private string orderOriginalId_ = "";
    /// <summary>
    /// 客户委托号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderOriginalId {
      get { return orderOriginalId_; }
      set {
        orderOriginalId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "account_no" field.</summary>
    public const int AccountNoFieldNumber = 6;
    private string accountNo_ = "";
    /// <summary>
    /// 资金账号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccountNo {
      get { return accountNo_; }
      set {
        accountNo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "exchange" field.</summary>
    public const int ExchangeFieldNumber = 7;
    private global::Dwjk.Dtp.Exchange exchange_ = 0;
    /// <summary>
    /// 交易所
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Dwjk.Dtp.Exchange Exchange {
      get { return exchange_; }
      set {
        exchange_ = value;
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 8;
    private string code_ = "";
    /// <summary>
    /// 证券代码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "quantity" field.</summary>
    public const int QuantityFieldNumber = 9;
    private uint quantity_;
    /// <summary>
    /// 委托数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Quantity {
      get { return quantity_; }
      set {
        quantity_ = value;
      }
    }

    /// <summary>Field number for the "order_side" field.</summary>
    public const int OrderSideFieldNumber = 10;
    private global::Dwjk.Dtp.OrderSide orderSide_ = 0;
    /// <summary>
    /// 委托竞价方向
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Dwjk.Dtp.OrderSide OrderSide {
      get { return orderSide_; }
      set {
        orderSide_ = value;
      }
    }

    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 11;
    private string price_ = "";
    /// <summary>
    /// 价格留3位小数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Price {
      get { return price_; }
      set {
        price_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlacedReport);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlacedReport other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OrderExchangeId != other.OrderExchangeId) return false;
      if (PlacedTime != other.PlacedTime) return false;
      if (FreezeAmount != other.FreezeAmount) return false;
      if (Status != other.Status) return false;
      if (OrderOriginalId != other.OrderOriginalId) return false;
      if (AccountNo != other.AccountNo) return false;
      if (Exchange != other.Exchange) return false;
      if (Code != other.Code) return false;
      if (Quantity != other.Quantity) return false;
      if (OrderSide != other.OrderSide) return false;
      if (Price != other.Price) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OrderExchangeId.Length != 0) hash ^= OrderExchangeId.GetHashCode();
      if (PlacedTime.Length != 0) hash ^= PlacedTime.GetHashCode();
      if (FreezeAmount.Length != 0) hash ^= FreezeAmount.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (OrderOriginalId.Length != 0) hash ^= OrderOriginalId.GetHashCode();
      if (AccountNo.Length != 0) hash ^= AccountNo.GetHashCode();
      if (Exchange != 0) hash ^= Exchange.GetHashCode();
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      if (Quantity != 0) hash ^= Quantity.GetHashCode();
      if (OrderSide != 0) hash ^= OrderSide.GetHashCode();
      if (Price.Length != 0) hash ^= Price.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OrderExchangeId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OrderExchangeId);
      }
      if (PlacedTime.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PlacedTime);
      }
      if (FreezeAmount.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(FreezeAmount);
      }
      if (Status != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Status);
      }
      if (OrderOriginalId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(OrderOriginalId);
      }
      if (AccountNo.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(AccountNo);
      }
      if (Exchange != 0) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Exchange);
      }
      if (Code.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Code);
      }
      if (Quantity != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(Quantity);
      }
      if (OrderSide != 0) {
        output.WriteRawTag(80);
        output.WriteEnum((int) OrderSide);
      }
      if (Price.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Price);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OrderExchangeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderExchangeId);
      }
      if (PlacedTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlacedTime);
      }
      if (FreezeAmount.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FreezeAmount);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (OrderOriginalId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderOriginalId);
      }
      if (AccountNo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountNo);
      }
      if (Exchange != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Exchange);
      }
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (Quantity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Quantity);
      }
      if (OrderSide != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OrderSide);
      }
      if (Price.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Price);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlacedReport other) {
      if (other == null) {
        return;
      }
      if (other.OrderExchangeId.Length != 0) {
        OrderExchangeId = other.OrderExchangeId;
      }
      if (other.PlacedTime.Length != 0) {
        PlacedTime = other.PlacedTime;
      }
      if (other.FreezeAmount.Length != 0) {
        FreezeAmount = other.FreezeAmount;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.OrderOriginalId.Length != 0) {
        OrderOriginalId = other.OrderOriginalId;
      }
      if (other.AccountNo.Length != 0) {
        AccountNo = other.AccountNo;
      }
      if (other.Exchange != 0) {
        Exchange = other.Exchange;
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
      if (other.Quantity != 0) {
        Quantity = other.Quantity;
      }
      if (other.OrderSide != 0) {
        OrderSide = other.OrderSide;
      }
      if (other.Price.Length != 0) {
        Price = other.Price;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OrderExchangeId = input.ReadString();
            break;
          }
          case 18: {
            PlacedTime = input.ReadString();
            break;
          }
          case 26: {
            FreezeAmount = input.ReadString();
            break;
          }
          case 32: {
            status_ = (global::Dwjk.Dtp.OrderStatus) input.ReadEnum();
            break;
          }
          case 42: {
            OrderOriginalId = input.ReadString();
            break;
          }
          case 50: {
            AccountNo = input.ReadString();
            break;
          }
          case 56: {
            exchange_ = (global::Dwjk.Dtp.Exchange) input.ReadEnum();
            break;
          }
          case 66: {
            Code = input.ReadString();
            break;
          }
          case 72: {
            Quantity = input.ReadUInt32();
            break;
          }
          case 80: {
            orderSide_ = (global::Dwjk.Dtp.OrderSide) input.ReadEnum();
            break;
          }
          case 90: {
            Price = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// MUST: ReportHeader.api_id = 20001002
  /// </summary>
  public sealed partial class FillReport : pb::IMessage<FillReport> {
    private static readonly pb::MessageParser<FillReport> _parser = new pb::MessageParser<FillReport>(() => new FillReport());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FillReport> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dwjk.Dtp.DtpApiReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FillReport() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FillReport(FillReport other) : this() {
      fillExchangeId_ = other.fillExchangeId_;
      fillTime_ = other.fillTime_;
      fillStatus_ = other.fillStatus_;
      fillPrice_ = other.fillPrice_;
      fillQuantity_ = other.fillQuantity_;
      fillAmount_ = other.fillAmount_;
      clearAmount_ = other.clearAmount_;
      totalFillQuantity_ = other.totalFillQuantity_;
      totalFillAmount_ = other.totalFillAmount_;
      totalCancelledQuantity_ = other.totalCancelledQuantity_;
      orderExchangeId_ = other.orderExchangeId_;
      orderOriginalId_ = other.orderOriginalId_;
      accountNo_ = other.accountNo_;
      exchange_ = other.exchange_;
      code_ = other.code_;
      price_ = other.price_;
      quantity_ = other.quantity_;
      orderSide_ = other.orderSide_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FillReport Clone() {
      return new FillReport(this);
    }

    /// <summary>Field number for the "fill_exchange_id" field.</summary>
    public const int FillExchangeIdFieldNumber = 1;
    private string fillExchangeId_ = "";
    /// <summary>
    /// 交易所成交编号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FillExchangeId {
      get { return fillExchangeId_; }
      set {
        fillExchangeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fill_time" field.</summary>
    public const int FillTimeFieldNumber = 2;
    private string fillTime_ = "";
    /// <summary>
    /// 成交的时间,单位毫秒,不存日期;顶点柜台返回的是 HH:MM:SS 格式，推断交易所返回的也是这个格式，所以改成字符串格式 yinwb
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FillTime {
      get { return fillTime_; }
      set {
        fillTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fill_status" field.</summary>
    public const int FillStatusFieldNumber = 3;
    private global::Dwjk.Dtp.FillStatus fillStatus_ = 0;
    /// <summary>
    /// 成交状态 0:未知 1:成交 2:撤单 3: 废单 4:确认 (TBD: 可能来自'撤销标志')
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Dwjk.Dtp.FillStatus FillStatus {
      get { return fillStatus_; }
      set {
        fillStatus_ = value;
      }
    }

    /// <summary>Field number for the "fill_price" field.</summary>
    public const int FillPriceFieldNumber = 4;
    private string fillPrice_ = "";
    /// <summary>
    /// TBD: 成交状态中指的是什么，其中是否有撤单? 或者撤单成功会使用该回报?
    /// *** 成交回报的状态只会有成交，所以这个状态可以删除
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FillPrice {
      get { return fillPrice_; }
      set {
        fillPrice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fill_quantity" field.</summary>
    public const int FillQuantityFieldNumber = 5;
    private uint fillQuantity_;
    /// <summary>
    /// 本次成交数量; fill_status为撤单时，此数值为撤单数量(TBD)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint FillQuantity {
      get { return fillQuantity_; }
      set {
        fillQuantity_ = value;
      }
    }

    /// <summary>Field number for the "fill_amount" field.</summary>
    public const int FillAmountFieldNumber = 6;
    private string fillAmount_ = "";
    /// <summary>
    /// 本次成交金额
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FillAmount {
      get { return fillAmount_; }
      set {
        fillAmount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "clear_amount" field.</summary>
    public const int ClearAmountFieldNumber = 7;
    private string clearAmount_ = "";
    /// <summary>
    /// (TBD)本次清算资金(委托为卖出方向时表示本次成交新增的可用资金)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClearAmount {
      get { return clearAmount_; }
      set {
        clearAmount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "total_fill_quantity" field.</summary>
    public const int TotalFillQuantityFieldNumber = 8;
    private uint totalFillQuantity_;
    /// <summary>
    /// 该委托总成交数量(本笔成交处理后)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TotalFillQuantity {
      get { return totalFillQuantity_; }
      set {
        totalFillQuantity_ = value;
      }
    }

    /// <summary>Field number for the "total_fill_amount" field.</summary>
    public const int TotalFillAmountFieldNumber = 9;
    private string totalFillAmount_ = "";
    /// <summary>
    /// 该委托总成交金额(本笔成交处理后)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TotalFillAmount {
      get { return totalFillAmount_; }
      set {
        totalFillAmount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "total_cancelled_quantity" field.</summary>
    public const int TotalCancelledQuantityFieldNumber = 10;
    private uint totalCancelledQuantity_;
    /// <summary>
    /// (TBD)该委托已撤单数量? 怀疑撤单成功会有该回报? ***撤单成功走撤单回报
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TotalCancelledQuantity {
      get { return totalCancelledQuantity_; }
      set {
        totalCancelledQuantity_ = value;
      }
    }

    /// <summary>Field number for the "order_exchange_id" field.</summary>
    public const int OrderExchangeIdFieldNumber = 11;
    private string orderExchangeId_ = "";
    /// <summary>
    /// 交易所委托号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderExchangeId {
      get { return orderExchangeId_; }
      set {
        orderExchangeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "order_original_id" field.</summary>
    public const int OrderOriginalIdFieldNumber = 12;
    private string orderOriginalId_ = "";
    /// <summary>
    /// 客户委托号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderOriginalId {
      get { return orderOriginalId_; }
      set {
        orderOriginalId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "account_no" field.</summary>
    public const int AccountNoFieldNumber = 13;
    private string accountNo_ = "";
    /// <summary>
    /// 资金账号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccountNo {
      get { return accountNo_; }
      set {
        accountNo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "exchange" field.</summary>
    public const int ExchangeFieldNumber = 14;
    private global::Dwjk.Dtp.Exchange exchange_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Dwjk.Dtp.Exchange Exchange {
      get { return exchange_; }
      set {
        exchange_ = value;
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 15;
    private string code_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 16;
    private string price_ = "";
    /// <summary>
    /// 价格留3位小数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Price {
      get { return price_; }
      set {
        price_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "quantity" field.</summary>
    public const int QuantityFieldNumber = 17;
    private uint quantity_;
    /// <summary>
    /// 委托数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Quantity {
      get { return quantity_; }
      set {
        quantity_ = value;
      }
    }

    /// <summary>Field number for the "order_side" field.</summary>
    public const int OrderSideFieldNumber = 18;
    private global::Dwjk.Dtp.OrderSide orderSide_ = 0;
    /// <summary>
    /// 委托竞价方向
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Dwjk.Dtp.OrderSide OrderSide {
      get { return orderSide_; }
      set {
        orderSide_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FillReport);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FillReport other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FillExchangeId != other.FillExchangeId) return false;
      if (FillTime != other.FillTime) return false;
      if (FillStatus != other.FillStatus) return false;
      if (FillPrice != other.FillPrice) return false;
      if (FillQuantity != other.FillQuantity) return false;
      if (FillAmount != other.FillAmount) return false;
      if (ClearAmount != other.ClearAmount) return false;
      if (TotalFillQuantity != other.TotalFillQuantity) return false;
      if (TotalFillAmount != other.TotalFillAmount) return false;
      if (TotalCancelledQuantity != other.TotalCancelledQuantity) return false;
      if (OrderExchangeId != other.OrderExchangeId) return false;
      if (OrderOriginalId != other.OrderOriginalId) return false;
      if (AccountNo != other.AccountNo) return false;
      if (Exchange != other.Exchange) return false;
      if (Code != other.Code) return false;
      if (Price != other.Price) return false;
      if (Quantity != other.Quantity) return false;
      if (OrderSide != other.OrderSide) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FillExchangeId.Length != 0) hash ^= FillExchangeId.GetHashCode();
      if (FillTime.Length != 0) hash ^= FillTime.GetHashCode();
      if (FillStatus != 0) hash ^= FillStatus.GetHashCode();
      if (FillPrice.Length != 0) hash ^= FillPrice.GetHashCode();
      if (FillQuantity != 0) hash ^= FillQuantity.GetHashCode();
      if (FillAmount.Length != 0) hash ^= FillAmount.GetHashCode();
      if (ClearAmount.Length != 0) hash ^= ClearAmount.GetHashCode();
      if (TotalFillQuantity != 0) hash ^= TotalFillQuantity.GetHashCode();
      if (TotalFillAmount.Length != 0) hash ^= TotalFillAmount.GetHashCode();
      if (TotalCancelledQuantity != 0) hash ^= TotalCancelledQuantity.GetHashCode();
      if (OrderExchangeId.Length != 0) hash ^= OrderExchangeId.GetHashCode();
      if (OrderOriginalId.Length != 0) hash ^= OrderOriginalId.GetHashCode();
      if (AccountNo.Length != 0) hash ^= AccountNo.GetHashCode();
      if (Exchange != 0) hash ^= Exchange.GetHashCode();
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      if (Price.Length != 0) hash ^= Price.GetHashCode();
      if (Quantity != 0) hash ^= Quantity.GetHashCode();
      if (OrderSide != 0) hash ^= OrderSide.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FillExchangeId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FillExchangeId);
      }
      if (FillTime.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FillTime);
      }
      if (FillStatus != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) FillStatus);
      }
      if (FillPrice.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(FillPrice);
      }
      if (FillQuantity != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(FillQuantity);
      }
      if (FillAmount.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(FillAmount);
      }
      if (ClearAmount.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ClearAmount);
      }
      if (TotalFillQuantity != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(TotalFillQuantity);
      }
      if (TotalFillAmount.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(TotalFillAmount);
      }
      if (TotalCancelledQuantity != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(TotalCancelledQuantity);
      }
      if (OrderExchangeId.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(OrderExchangeId);
      }
      if (OrderOriginalId.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(OrderOriginalId);
      }
      if (AccountNo.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(AccountNo);
      }
      if (Exchange != 0) {
        output.WriteRawTag(112);
        output.WriteEnum((int) Exchange);
      }
      if (Code.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(Code);
      }
      if (Price.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(Price);
      }
      if (Quantity != 0) {
        output.WriteRawTag(136, 1);
        output.WriteUInt32(Quantity);
      }
      if (OrderSide != 0) {
        output.WriteRawTag(144, 1);
        output.WriteEnum((int) OrderSide);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FillExchangeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FillExchangeId);
      }
      if (FillTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FillTime);
      }
      if (FillStatus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FillStatus);
      }
      if (FillPrice.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FillPrice);
      }
      if (FillQuantity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FillQuantity);
      }
      if (FillAmount.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FillAmount);
      }
      if (ClearAmount.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClearAmount);
      }
      if (TotalFillQuantity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TotalFillQuantity);
      }
      if (TotalFillAmount.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TotalFillAmount);
      }
      if (TotalCancelledQuantity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TotalCancelledQuantity);
      }
      if (OrderExchangeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderExchangeId);
      }
      if (OrderOriginalId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderOriginalId);
      }
      if (AccountNo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountNo);
      }
      if (Exchange != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Exchange);
      }
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (Price.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Price);
      }
      if (Quantity != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Quantity);
      }
      if (OrderSide != 0) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) OrderSide);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FillReport other) {
      if (other == null) {
        return;
      }
      if (other.FillExchangeId.Length != 0) {
        FillExchangeId = other.FillExchangeId;
      }
      if (other.FillTime.Length != 0) {
        FillTime = other.FillTime;
      }
      if (other.FillStatus != 0) {
        FillStatus = other.FillStatus;
      }
      if (other.FillPrice.Length != 0) {
        FillPrice = other.FillPrice;
      }
      if (other.FillQuantity != 0) {
        FillQuantity = other.FillQuantity;
      }
      if (other.FillAmount.Length != 0) {
        FillAmount = other.FillAmount;
      }
      if (other.ClearAmount.Length != 0) {
        ClearAmount = other.ClearAmount;
      }
      if (other.TotalFillQuantity != 0) {
        TotalFillQuantity = other.TotalFillQuantity;
      }
      if (other.TotalFillAmount.Length != 0) {
        TotalFillAmount = other.TotalFillAmount;
      }
      if (other.TotalCancelledQuantity != 0) {
        TotalCancelledQuantity = other.TotalCancelledQuantity;
      }
      if (other.OrderExchangeId.Length != 0) {
        OrderExchangeId = other.OrderExchangeId;
      }
      if (other.OrderOriginalId.Length != 0) {
        OrderOriginalId = other.OrderOriginalId;
      }
      if (other.AccountNo.Length != 0) {
        AccountNo = other.AccountNo;
      }
      if (other.Exchange != 0) {
        Exchange = other.Exchange;
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
      if (other.Price.Length != 0) {
        Price = other.Price;
      }
      if (other.Quantity != 0) {
        Quantity = other.Quantity;
      }
      if (other.OrderSide != 0) {
        OrderSide = other.OrderSide;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FillExchangeId = input.ReadString();
            break;
          }
          case 18: {
            FillTime = input.ReadString();
            break;
          }
          case 24: {
            fillStatus_ = (global::Dwjk.Dtp.FillStatus) input.ReadEnum();
            break;
          }
          case 34: {
            FillPrice = input.ReadString();
            break;
          }
          case 40: {
            FillQuantity = input.ReadUInt32();
            break;
          }
          case 50: {
            FillAmount = input.ReadString();
            break;
          }
          case 58: {
            ClearAmount = input.ReadString();
            break;
          }
          case 64: {
            TotalFillQuantity = input.ReadUInt32();
            break;
          }
          case 74: {
            TotalFillAmount = input.ReadString();
            break;
          }
          case 80: {
            TotalCancelledQuantity = input.ReadUInt32();
            break;
          }
          case 90: {
            OrderExchangeId = input.ReadString();
            break;
          }
          case 98: {
            OrderOriginalId = input.ReadString();
            break;
          }
          case 106: {
            AccountNo = input.ReadString();
            break;
          }
          case 112: {
            exchange_ = (global::Dwjk.Dtp.Exchange) input.ReadEnum();
            break;
          }
          case 122: {
            Code = input.ReadString();
            break;
          }
          case 130: {
            Price = input.ReadString();
            break;
          }
          case 136: {
            Quantity = input.ReadUInt32();
            break;
          }
          case 144: {
            orderSide_ = (global::Dwjk.Dtp.OrderSide) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// MUST: ReportHeader.api_id = 20001003
  /// </summary>
  public sealed partial class CancellationReport : pb::IMessage<CancellationReport> {
    private static readonly pb::MessageParser<CancellationReport> _parser = new pb::MessageParser<CancellationReport>(() => new CancellationReport());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CancellationReport> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dwjk.Dtp.DtpApiReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancellationReport() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancellationReport(CancellationReport other) : this() {
      orderExchangeId_ = other.orderExchangeId_;
      orderOriginalId_ = other.orderOriginalId_;
      accountNo_ = other.accountNo_;
      exchange_ = other.exchange_;
      code_ = other.code_;
      quantity_ = other.quantity_;
      orderSide_ = other.orderSide_;
      status_ = other.status_;
      totalFillQuantity_ = other.totalFillQuantity_;
      cancelledQuantity_ = other.cancelledQuantity_;
      freezeAmount_ = other.freezeAmount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancellationReport Clone() {
      return new CancellationReport(this);
    }

    /// <summary>Field number for the "order_exchange_id" field.</summary>
    public const int OrderExchangeIdFieldNumber = 1;
    private string orderExchangeId_ = "";
    /// <summary>
    /// 要撤的委托：交易所委托号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderExchangeId {
      get { return orderExchangeId_; }
      set {
        orderExchangeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "order_original_id" field.</summary>
    public const int OrderOriginalIdFieldNumber = 2;
    private string orderOriginalId_ = "";
    /// <summary>
    /// 要撤的委托：客户委托号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderOriginalId {
      get { return orderOriginalId_; }
      set {
        orderOriginalId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "account_no" field.</summary>
    public const int AccountNoFieldNumber = 3;
    private string accountNo_ = "";
    /// <summary>
    /// 资金账号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccountNo {
      get { return accountNo_; }
      set {
        accountNo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "exchange" field.</summary>
    public const int ExchangeFieldNumber = 4;
    private global::Dwjk.Dtp.Exchange exchange_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Dwjk.Dtp.Exchange Exchange {
      get { return exchange_; }
      set {
        exchange_ = value;
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 5;
    private string code_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "quantity" field.</summary>
    public const int QuantityFieldNumber = 6;
    private uint quantity_;
    /// <summary>
    /// 委托数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Quantity {
      get { return quantity_; }
      set {
        quantity_ = value;
      }
    }

    /// <summary>Field number for the "order_side" field.</summary>
    public const int OrderSideFieldNumber = 7;
    private global::Dwjk.Dtp.OrderSide orderSide_ = 0;
    /// <summary>
    /// 委托竞价方向
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Dwjk.Dtp.OrderSide OrderSide {
      get { return orderSide_; }
      set {
        orderSide_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 8;
    private global::Dwjk.Dtp.OrderStatus status_ = 0;
    /// <summary>
    /// 委托状态 (TBD: 可能来自'撤销标志') ***撤单回报只会有已撤状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Dwjk.Dtp.OrderStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "total_fill_quantity" field.</summary>
    public const int TotalFillQuantityFieldNumber = 9;
    private uint totalFillQuantity_;
    /// <summary>
    /// 该委托已成交数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TotalFillQuantity {
      get { return totalFillQuantity_; }
      set {
        totalFillQuantity_ = value;
      }
    }

    /// <summary>Field number for the "cancelled_quantity" field.</summary>
    public const int CancelledQuantityFieldNumber = 10;
    private uint cancelledQuantity_;
    /// <summary>
    /// 撤单数量(实际撤单数量)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint CancelledQuantity {
      get { return cancelledQuantity_; }
      set {
        cancelledQuantity_ = value;
      }
    }

    /// <summary>Field number for the "freeze_amount" field.</summary>
    public const int FreezeAmountFieldNumber = 11;
    private string freezeAmount_ = "";
    /// <summary>
    /// (TBD)冻结金额(负数表示解冻) ***买入撤单时会有释放的冻结金额，卖出撤单时为0
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FreezeAmount {
      get { return freezeAmount_; }
      set {
        freezeAmount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CancellationReport);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CancellationReport other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OrderExchangeId != other.OrderExchangeId) return false;
      if (OrderOriginalId != other.OrderOriginalId) return false;
      if (AccountNo != other.AccountNo) return false;
      if (Exchange != other.Exchange) return false;
      if (Code != other.Code) return false;
      if (Quantity != other.Quantity) return false;
      if (OrderSide != other.OrderSide) return false;
      if (Status != other.Status) return false;
      if (TotalFillQuantity != other.TotalFillQuantity) return false;
      if (CancelledQuantity != other.CancelledQuantity) return false;
      if (FreezeAmount != other.FreezeAmount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OrderExchangeId.Length != 0) hash ^= OrderExchangeId.GetHashCode();
      if (OrderOriginalId.Length != 0) hash ^= OrderOriginalId.GetHashCode();
      if (AccountNo.Length != 0) hash ^= AccountNo.GetHashCode();
      if (Exchange != 0) hash ^= Exchange.GetHashCode();
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      if (Quantity != 0) hash ^= Quantity.GetHashCode();
      if (OrderSide != 0) hash ^= OrderSide.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (TotalFillQuantity != 0) hash ^= TotalFillQuantity.GetHashCode();
      if (CancelledQuantity != 0) hash ^= CancelledQuantity.GetHashCode();
      if (FreezeAmount.Length != 0) hash ^= FreezeAmount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OrderExchangeId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OrderExchangeId);
      }
      if (OrderOriginalId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(OrderOriginalId);
      }
      if (AccountNo.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AccountNo);
      }
      if (Exchange != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Exchange);
      }
      if (Code.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Code);
      }
      if (Quantity != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Quantity);
      }
      if (OrderSide != 0) {
        output.WriteRawTag(56);
        output.WriteEnum((int) OrderSide);
      }
      if (Status != 0) {
        output.WriteRawTag(64);
        output.WriteEnum((int) Status);
      }
      if (TotalFillQuantity != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(TotalFillQuantity);
      }
      if (CancelledQuantity != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(CancelledQuantity);
      }
      if (FreezeAmount.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(FreezeAmount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OrderExchangeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderExchangeId);
      }
      if (OrderOriginalId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderOriginalId);
      }
      if (AccountNo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountNo);
      }
      if (Exchange != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Exchange);
      }
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (Quantity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Quantity);
      }
      if (OrderSide != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OrderSide);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (TotalFillQuantity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TotalFillQuantity);
      }
      if (CancelledQuantity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CancelledQuantity);
      }
      if (FreezeAmount.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FreezeAmount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CancellationReport other) {
      if (other == null) {
        return;
      }
      if (other.OrderExchangeId.Length != 0) {
        OrderExchangeId = other.OrderExchangeId;
      }
      if (other.OrderOriginalId.Length != 0) {
        OrderOriginalId = other.OrderOriginalId;
      }
      if (other.AccountNo.Length != 0) {
        AccountNo = other.AccountNo;
      }
      if (other.Exchange != 0) {
        Exchange = other.Exchange;
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
      if (other.Quantity != 0) {
        Quantity = other.Quantity;
      }
      if (other.OrderSide != 0) {
        OrderSide = other.OrderSide;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.TotalFillQuantity != 0) {
        TotalFillQuantity = other.TotalFillQuantity;
      }
      if (other.CancelledQuantity != 0) {
        CancelledQuantity = other.CancelledQuantity;
      }
      if (other.FreezeAmount.Length != 0) {
        FreezeAmount = other.FreezeAmount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OrderExchangeId = input.ReadString();
            break;
          }
          case 18: {
            OrderOriginalId = input.ReadString();
            break;
          }
          case 26: {
            AccountNo = input.ReadString();
            break;
          }
          case 32: {
            exchange_ = (global::Dwjk.Dtp.Exchange) input.ReadEnum();
            break;
          }
          case 42: {
            Code = input.ReadString();
            break;
          }
          case 48: {
            Quantity = input.ReadUInt32();
            break;
          }
          case 56: {
            orderSide_ = (global::Dwjk.Dtp.OrderSide) input.ReadEnum();
            break;
          }
          case 64: {
            status_ = (global::Dwjk.Dtp.OrderStatus) input.ReadEnum();
            break;
          }
          case 72: {
            TotalFillQuantity = input.ReadUInt32();
            break;
          }
          case 80: {
            CancelledQuantity = input.ReadUInt32();
            break;
          }
          case 90: {
            FreezeAmount = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// MUST: RequestHeader.api_id = 10003001
  /// </summary>
  public sealed partial class QueryOrdersRequest : pb::IMessage<QueryOrdersRequest> {
    private static readonly pb::MessageParser<QueryOrdersRequest> _parser = new pb::MessageParser<QueryOrdersRequest>(() => new QueryOrdersRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryOrdersRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dwjk.Dtp.DtpApiReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryOrdersRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryOrdersRequest(QueryOrdersRequest other) : this() {
      accountNo_ = other.accountNo_;
      orderExchangeId_ = other.orderExchangeId_;
      queryCriteria_ = other.queryCriteria_;
      Pagination = other.pagination_ != null ? other.Pagination.Clone() : null;
      exchange_ = other.exchange_;
      code_ = other.code_;
      orderOriginalId_ = other.orderOriginalId_;
      orderSide_ = other.orderSide_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryOrdersRequest Clone() {
      return new QueryOrdersRequest(this);
    }

    /// <summary>Field number for the "account_no" field.</summary>
    public const int AccountNoFieldNumber = 1;
    private string accountNo_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccountNo {
      get { return accountNo_; }
      set {
        accountNo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "order_exchange_id" field.</summary>
    public const int OrderExchangeIdFieldNumber = 2;
    private string orderExchangeId_ = "";
    /// <summary>
    /// 空则查询全部
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderExchangeId {
      get { return orderExchangeId_; }
      set {
        orderExchangeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "query_criteria" field.</summary>
    public const int QueryCriteriaFieldNumber = 3;
    private global::Dwjk.Dtp.QueryOrderCriteria queryCriteria_ = 0;
    /// <summary>
    /// 查询全部委托或只查可撤单委托
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Dwjk.Dtp.QueryOrderCriteria QueryCriteria {
      get { return queryCriteria_; }
      set {
        queryCriteria_ = value;
      }
    }

    /// <summary>Field number for the "pagination" field.</summary>
    public const int PaginationFieldNumber = 4;
    private global::Dwjk.Dtp.QueryPagination pagination_;
    /// <summary>
    /// 查询结果分页标识
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Dwjk.Dtp.QueryPagination Pagination {
      get { return pagination_; }
      set {
        pagination_ = value;
      }
    }

    /// <summary>Field number for the "exchange" field.</summary>
    public const int ExchangeFieldNumber = 5;
    private global::Dwjk.Dtp.Exchange exchange_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Dwjk.Dtp.Exchange Exchange {
      get { return exchange_; }
      set {
        exchange_ = value;
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 6;
    private string code_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "order_original_id" field.</summary>
    public const int OrderOriginalIdFieldNumber = 7;
    private string orderOriginalId_ = "";
    /// <summary>
    /// 空则查询全部
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderOriginalId {
      get { return orderOriginalId_; }
      set {
        orderOriginalId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "order_side" field.</summary>
    public const int OrderSideFieldNumber = 8;
    private global::Dwjk.Dtp.OrderSide orderSide_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Dwjk.Dtp.OrderSide OrderSide {
      get { return orderSide_; }
      set {
        orderSide_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryOrdersRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryOrdersRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountNo != other.AccountNo) return false;
      if (OrderExchangeId != other.OrderExchangeId) return false;
      if (QueryCriteria != other.QueryCriteria) return false;
      if (!object.Equals(Pagination, other.Pagination)) return false;
      if (Exchange != other.Exchange) return false;
      if (Code != other.Code) return false;
      if (OrderOriginalId != other.OrderOriginalId) return false;
      if (OrderSide != other.OrderSide) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccountNo.Length != 0) hash ^= AccountNo.GetHashCode();
      if (OrderExchangeId.Length != 0) hash ^= OrderExchangeId.GetHashCode();
      if (QueryCriteria != 0) hash ^= QueryCriteria.GetHashCode();
      if (pagination_ != null) hash ^= Pagination.GetHashCode();
      if (Exchange != 0) hash ^= Exchange.GetHashCode();
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      if (OrderOriginalId.Length != 0) hash ^= OrderOriginalId.GetHashCode();
      if (OrderSide != 0) hash ^= OrderSide.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AccountNo.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AccountNo);
      }
      if (OrderExchangeId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(OrderExchangeId);
      }
      if (QueryCriteria != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) QueryCriteria);
      }
      if (pagination_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Pagination);
      }
      if (Exchange != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Exchange);
      }
      if (Code.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Code);
      }
      if (OrderOriginalId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(OrderOriginalId);
      }
      if (OrderSide != 0) {
        output.WriteRawTag(64);
        output.WriteEnum((int) OrderSide);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccountNo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountNo);
      }
      if (OrderExchangeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderExchangeId);
      }
      if (QueryCriteria != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) QueryCriteria);
      }
      if (pagination_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pagination);
      }
      if (Exchange != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Exchange);
      }
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (OrderOriginalId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderOriginalId);
      }
      if (OrderSide != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OrderSide);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryOrdersRequest other) {
      if (other == null) {
        return;
      }
      if (other.AccountNo.Length != 0) {
        AccountNo = other.AccountNo;
      }
      if (other.OrderExchangeId.Length != 0) {
        OrderExchangeId = other.OrderExchangeId;
      }
      if (other.QueryCriteria != 0) {
        QueryCriteria = other.QueryCriteria;
      }
      if (other.pagination_ != null) {
        if (pagination_ == null) {
          pagination_ = new global::Dwjk.Dtp.QueryPagination();
        }
        Pagination.MergeFrom(other.Pagination);
      }
      if (other.Exchange != 0) {
        Exchange = other.Exchange;
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
      if (other.OrderOriginalId.Length != 0) {
        OrderOriginalId = other.OrderOriginalId;
      }
      if (other.OrderSide != 0) {
        OrderSide = other.OrderSide;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AccountNo = input.ReadString();
            break;
          }
          case 18: {
            OrderExchangeId = input.ReadString();
            break;
          }
          case 24: {
            queryCriteria_ = (global::Dwjk.Dtp.QueryOrderCriteria) input.ReadEnum();
            break;
          }
          case 34: {
            if (pagination_ == null) {
              pagination_ = new global::Dwjk.Dtp.QueryPagination();
            }
            input.ReadMessage(pagination_);
            break;
          }
          case 40: {
            exchange_ = (global::Dwjk.Dtp.Exchange) input.ReadEnum();
            break;
          }
          case 50: {
            Code = input.ReadString();
            break;
          }
          case 58: {
            OrderOriginalId = input.ReadString();
            break;
          }
          case 64: {
            orderSide_ = (global::Dwjk.Dtp.OrderSide) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// MUST: ResponseHeader.api_id = 11003001
  /// </summary>
  public sealed partial class QueryOrdersResponse : pb::IMessage<QueryOrdersResponse> {
    private static readonly pb::MessageParser<QueryOrdersResponse> _parser = new pb::MessageParser<QueryOrdersResponse>(() => new QueryOrdersResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryOrdersResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dwjk.Dtp.DtpApiReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryOrdersResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryOrdersResponse(QueryOrdersResponse other) : this() {
      orderList_ = other.orderList_.Clone();
      Pagination = other.pagination_ != null ? other.Pagination.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryOrdersResponse Clone() {
      return new QueryOrdersResponse(this);
    }

    /// <summary>Field number for the "order_list" field.</summary>
    public const int OrderListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Dwjk.Dtp.QueryOrdersResponse.Types.Order> _repeated_orderList_codec
        = pb::FieldCodec.ForMessage(10, global::Dwjk.Dtp.QueryOrdersResponse.Types.Order.Parser);
    private readonly pbc::RepeatedField<global::Dwjk.Dtp.QueryOrdersResponse.Types.Order> orderList_ = new pbc::RepeatedField<global::Dwjk.Dtp.QueryOrdersResponse.Types.Order>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Dwjk.Dtp.QueryOrdersResponse.Types.Order> OrderList {
      get { return orderList_; }
    }

    /// <summary>Field number for the "pagination" field.</summary>
    public const int PaginationFieldNumber = 2;
    private global::Dwjk.Dtp.QueryPagination pagination_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Dwjk.Dtp.QueryPagination Pagination {
      get { return pagination_; }
      set {
        pagination_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryOrdersResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryOrdersResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!orderList_.Equals(other.orderList_)) return false;
      if (!object.Equals(Pagination, other.Pagination)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= orderList_.GetHashCode();
      if (pagination_ != null) hash ^= Pagination.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      orderList_.WriteTo(output, _repeated_orderList_codec);
      if (pagination_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pagination);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += orderList_.CalculateSize(_repeated_orderList_codec);
      if (pagination_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pagination);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryOrdersResponse other) {
      if (other == null) {
        return;
      }
      orderList_.Add(other.orderList_);
      if (other.pagination_ != null) {
        if (pagination_ == null) {
          pagination_ = new global::Dwjk.Dtp.QueryPagination();
        }
        Pagination.MergeFrom(other.Pagination);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            orderList_.AddEntriesFrom(input, _repeated_orderList_codec);
            break;
          }
          case 18: {
            if (pagination_ == null) {
              pagination_ = new global::Dwjk.Dtp.QueryPagination();
            }
            input.ReadMessage(pagination_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the QueryOrdersResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Order : pb::IMessage<Order> {
        private static readonly pb::MessageParser<Order> _parser = new pb::MessageParser<Order>(() => new Order());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Order> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Dwjk.Dtp.QueryOrdersResponse.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Order() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Order(Order other) : this() {
          orderExchangeId_ = other.orderExchangeId_;
          orderOriginalId_ = other.orderOriginalId_;
          exchange_ = other.exchange_;
          code_ = other.code_;
          name_ = other.name_;
          price_ = other.price_;
          quantity_ = other.quantity_;
          orderSide_ = other.orderSide_;
          orderType_ = other.orderType_;
          status_ = other.status_;
          orderTime_ = other.orderTime_;
          accountNo_ = other.accountNo_;
          averageFillPrice_ = other.averageFillPrice_;
          totalFillQuantity_ = other.totalFillQuantity_;
          totalFillAmount_ = other.totalFillAmount_;
          freezeAmount_ = other.freezeAmount_;
          clearAmount_ = other.clearAmount_;
          totalCancelledQuantity_ = other.totalCancelledQuantity_;
          statusMessage_ = other.statusMessage_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Order Clone() {
          return new Order(this);
        }

        /// <summary>Field number for the "order_exchange_id" field.</summary>
        public const int OrderExchangeIdFieldNumber = 1;
        private string orderExchangeId_ = "";
        /// <summary>
        /// 交易所委托号
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string OrderExchangeId {
          get { return orderExchangeId_; }
          set {
            orderExchangeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "order_original_id" field.</summary>
        public const int OrderOriginalIdFieldNumber = 2;
        private string orderOriginalId_ = "";
        /// <summary>
        /// 客户委托号
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string OrderOriginalId {
          get { return orderOriginalId_; }
          set {
            orderOriginalId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "exchange" field.</summary>
        public const int ExchangeFieldNumber = 3;
        private global::Dwjk.Dtp.Exchange exchange_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Dwjk.Dtp.Exchange Exchange {
          get { return exchange_; }
          set {
            exchange_ = value;
          }
        }

        /// <summary>Field number for the "code" field.</summary>
        public const int CodeFieldNumber = 4;
        private string code_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Code {
          get { return code_; }
          set {
            code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 5;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "price" field.</summary>
        public const int PriceFieldNumber = 6;
        private string price_ = "";
        /// <summary>
        /// 价格留3位小数
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Price {
          get { return price_; }
          set {
            price_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "quantity" field.</summary>
        public const int QuantityFieldNumber = 7;
        private uint quantity_;
        /// <summary>
        /// 委托数量
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Quantity {
          get { return quantity_; }
          set {
            quantity_ = value;
          }
        }

        /// <summary>Field number for the "order_side" field.</summary>
        public const int OrderSideFieldNumber = 8;
        private global::Dwjk.Dtp.OrderSide orderSide_ = 0;
        /// <summary>
        /// 委托竞价方向
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Dwjk.Dtp.OrderSide OrderSide {
          get { return orderSide_; }
          set {
            orderSide_ = value;
          }
        }

        /// <summary>Field number for the "order_type" field.</summary>
        public const int OrderTypeFieldNumber = 9;
        private global::Dwjk.Dtp.OrderType orderType_ = 0;
        /// <summary>
        /// 委托竞价类型
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Dwjk.Dtp.OrderType OrderType {
          get { return orderType_; }
          set {
            orderType_ = value;
          }
        }

        /// <summary>Field number for the "status" field.</summary>
        public const int StatusFieldNumber = 10;
        private global::Dwjk.Dtp.OrderStatus status_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Dwjk.Dtp.OrderStatus Status {
          get { return status_; }
          set {
            status_ = value;
          }
        }

        /// <summary>Field number for the "order_time" field.</summary>
        public const int OrderTimeFieldNumber = 11;
        private string orderTime_ = "";
        /// <summary>
        /// 交易所委托时间,单位毫秒,不存日期 ;顶点柜台返回的是 HH:MM:SS 格式，推断交易所返回的也是这个格式，所以改成字符串格式 yinwb
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string OrderTime {
          get { return orderTime_; }
          set {
            orderTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "account_no" field.</summary>
        public const int AccountNoFieldNumber = 12;
        private string accountNo_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string AccountNo {
          get { return accountNo_; }
          set {
            accountNo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "average_fill_price" field.</summary>
        public const int AverageFillPriceFieldNumber = 13;
        private string averageFillPrice_ = "";
        /// <summary>
        /// 成交均价
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string AverageFillPrice {
          get { return averageFillPrice_; }
          set {
            averageFillPrice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "total_fill_quantity" field.</summary>
        public const int TotalFillQuantityFieldNumber = 14;
        private uint totalFillQuantity_;
        /// <summary>
        /// 该委托总成交数量
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint TotalFillQuantity {
          get { return totalFillQuantity_; }
          set {
            totalFillQuantity_ = value;
          }
        }

        /// <summary>Field number for the "total_fill_amount" field.</summary>
        public const int TotalFillAmountFieldNumber = 15;
        private string totalFillAmount_ = "";
        /// <summary>
        /// 该委托总成交金额
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TotalFillAmount {
          get { return totalFillAmount_; }
          set {
            totalFillAmount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "freeze_amount" field.</summary>
        public const int FreezeAmountFieldNumber = 16;
        private string freezeAmount_ = "";
        /// <summary>
        /// 冻结金额(负数表示解冻)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string FreezeAmount {
          get { return freezeAmount_; }
          set {
            freezeAmount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "clear_amount" field.</summary>
        public const int ClearAmountFieldNumber = 17;
        private string clearAmount_ = "";
        /// <summary>
        /// (TBD)清算资金 ***买入为负，卖出为正
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ClearAmount {
          get { return clearAmount_; }
          set {
            clearAmount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "total_cancelled_quantity" field.</summary>
        public const int TotalCancelledQuantityFieldNumber = 18;
        private uint totalCancelledQuantity_;
        /// <summary>
        /// 该委托已撤单数量
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint TotalCancelledQuantity {
          get { return totalCancelledQuantity_; }
          set {
            totalCancelledQuantity_ = value;
          }
        }

        /// <summary>Field number for the "status_message" field.</summary>
        public const int StatusMessageFieldNumber = 19;
        private string statusMessage_ = "";
        /// <summary>
        /// 委托状态的文字说明，包括废单原因
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string StatusMessage {
          get { return statusMessage_; }
          set {
            statusMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Order);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Order other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (OrderExchangeId != other.OrderExchangeId) return false;
          if (OrderOriginalId != other.OrderOriginalId) return false;
          if (Exchange != other.Exchange) return false;
          if (Code != other.Code) return false;
          if (Name != other.Name) return false;
          if (Price != other.Price) return false;
          if (Quantity != other.Quantity) return false;
          if (OrderSide != other.OrderSide) return false;
          if (OrderType != other.OrderType) return false;
          if (Status != other.Status) return false;
          if (OrderTime != other.OrderTime) return false;
          if (AccountNo != other.AccountNo) return false;
          if (AverageFillPrice != other.AverageFillPrice) return false;
          if (TotalFillQuantity != other.TotalFillQuantity) return false;
          if (TotalFillAmount != other.TotalFillAmount) return false;
          if (FreezeAmount != other.FreezeAmount) return false;
          if (ClearAmount != other.ClearAmount) return false;
          if (TotalCancelledQuantity != other.TotalCancelledQuantity) return false;
          if (StatusMessage != other.StatusMessage) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (OrderExchangeId.Length != 0) hash ^= OrderExchangeId.GetHashCode();
          if (OrderOriginalId.Length != 0) hash ^= OrderOriginalId.GetHashCode();
          if (Exchange != 0) hash ^= Exchange.GetHashCode();
          if (Code.Length != 0) hash ^= Code.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (Price.Length != 0) hash ^= Price.GetHashCode();
          if (Quantity != 0) hash ^= Quantity.GetHashCode();
          if (OrderSide != 0) hash ^= OrderSide.GetHashCode();
          if (OrderType != 0) hash ^= OrderType.GetHashCode();
          if (Status != 0) hash ^= Status.GetHashCode();
          if (OrderTime.Length != 0) hash ^= OrderTime.GetHashCode();
          if (AccountNo.Length != 0) hash ^= AccountNo.GetHashCode();
          if (AverageFillPrice.Length != 0) hash ^= AverageFillPrice.GetHashCode();
          if (TotalFillQuantity != 0) hash ^= TotalFillQuantity.GetHashCode();
          if (TotalFillAmount.Length != 0) hash ^= TotalFillAmount.GetHashCode();
          if (FreezeAmount.Length != 0) hash ^= FreezeAmount.GetHashCode();
          if (ClearAmount.Length != 0) hash ^= ClearAmount.GetHashCode();
          if (TotalCancelledQuantity != 0) hash ^= TotalCancelledQuantity.GetHashCode();
          if (StatusMessage.Length != 0) hash ^= StatusMessage.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (OrderExchangeId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(OrderExchangeId);
          }
          if (OrderOriginalId.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(OrderOriginalId);
          }
          if (Exchange != 0) {
            output.WriteRawTag(24);
            output.WriteEnum((int) Exchange);
          }
          if (Code.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(Code);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(Name);
          }
          if (Price.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(Price);
          }
          if (Quantity != 0) {
            output.WriteRawTag(56);
            output.WriteUInt32(Quantity);
          }
          if (OrderSide != 0) {
            output.WriteRawTag(64);
            output.WriteEnum((int) OrderSide);
          }
          if (OrderType != 0) {
            output.WriteRawTag(72);
            output.WriteEnum((int) OrderType);
          }
          if (Status != 0) {
            output.WriteRawTag(80);
            output.WriteEnum((int) Status);
          }
          if (OrderTime.Length != 0) {
            output.WriteRawTag(90);
            output.WriteString(OrderTime);
          }
          if (AccountNo.Length != 0) {
            output.WriteRawTag(98);
            output.WriteString(AccountNo);
          }
          if (AverageFillPrice.Length != 0) {
            output.WriteRawTag(106);
            output.WriteString(AverageFillPrice);
          }
          if (TotalFillQuantity != 0) {
            output.WriteRawTag(112);
            output.WriteUInt32(TotalFillQuantity);
          }
          if (TotalFillAmount.Length != 0) {
            output.WriteRawTag(122);
            output.WriteString(TotalFillAmount);
          }
          if (FreezeAmount.Length != 0) {
            output.WriteRawTag(130, 1);
            output.WriteString(FreezeAmount);
          }
          if (ClearAmount.Length != 0) {
            output.WriteRawTag(138, 1);
            output.WriteString(ClearAmount);
          }
          if (TotalCancelledQuantity != 0) {
            output.WriteRawTag(144, 1);
            output.WriteUInt32(TotalCancelledQuantity);
          }
          if (StatusMessage.Length != 0) {
            output.WriteRawTag(154, 1);
            output.WriteString(StatusMessage);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (OrderExchangeId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderExchangeId);
          }
          if (OrderOriginalId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderOriginalId);
          }
          if (Exchange != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Exchange);
          }
          if (Code.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (Price.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Price);
          }
          if (Quantity != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Quantity);
          }
          if (OrderSide != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OrderSide);
          }
          if (OrderType != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OrderType);
          }
          if (Status != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
          }
          if (OrderTime.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderTime);
          }
          if (AccountNo.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountNo);
          }
          if (AverageFillPrice.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(AverageFillPrice);
          }
          if (TotalFillQuantity != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TotalFillQuantity);
          }
          if (TotalFillAmount.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TotalFillAmount);
          }
          if (FreezeAmount.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(FreezeAmount);
          }
          if (ClearAmount.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(ClearAmount);
          }
          if (TotalCancelledQuantity != 0) {
            size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TotalCancelledQuantity);
          }
          if (StatusMessage.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(StatusMessage);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Order other) {
          if (other == null) {
            return;
          }
          if (other.OrderExchangeId.Length != 0) {
            OrderExchangeId = other.OrderExchangeId;
          }
          if (other.OrderOriginalId.Length != 0) {
            OrderOriginalId = other.OrderOriginalId;
          }
          if (other.Exchange != 0) {
            Exchange = other.Exchange;
          }
          if (other.Code.Length != 0) {
            Code = other.Code;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.Price.Length != 0) {
            Price = other.Price;
          }
          if (other.Quantity != 0) {
            Quantity = other.Quantity;
          }
          if (other.OrderSide != 0) {
            OrderSide = other.OrderSide;
          }
          if (other.OrderType != 0) {
            OrderType = other.OrderType;
          }
          if (other.Status != 0) {
            Status = other.Status;
          }
          if (other.OrderTime.Length != 0) {
            OrderTime = other.OrderTime;
          }
          if (other.AccountNo.Length != 0) {
            AccountNo = other.AccountNo;
          }
          if (other.AverageFillPrice.Length != 0) {
            AverageFillPrice = other.AverageFillPrice;
          }
          if (other.TotalFillQuantity != 0) {
            TotalFillQuantity = other.TotalFillQuantity;
          }
          if (other.TotalFillAmount.Length != 0) {
            TotalFillAmount = other.TotalFillAmount;
          }
          if (other.FreezeAmount.Length != 0) {
            FreezeAmount = other.FreezeAmount;
          }
          if (other.ClearAmount.Length != 0) {
            ClearAmount = other.ClearAmount;
          }
          if (other.TotalCancelledQuantity != 0) {
            TotalCancelledQuantity = other.TotalCancelledQuantity;
          }
          if (other.StatusMessage.Length != 0) {
            StatusMessage = other.StatusMessage;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                OrderExchangeId = input.ReadString();
                break;
              }
              case 18: {
                OrderOriginalId = input.ReadString();
                break;
              }
              case 24: {
                exchange_ = (global::Dwjk.Dtp.Exchange) input.ReadEnum();
                break;
              }
              case 34: {
                Code = input.ReadString();
                break;
              }
              case 42: {
                Name = input.ReadString();
                break;
              }
              case 50: {
                Price = input.ReadString();
                break;
              }
              case 56: {
                Quantity = input.ReadUInt32();
                break;
              }
              case 64: {
                orderSide_ = (global::Dwjk.Dtp.OrderSide) input.ReadEnum();
                break;
              }
              case 72: {
                orderType_ = (global::Dwjk.Dtp.OrderType) input.ReadEnum();
                break;
              }
              case 80: {
                status_ = (global::Dwjk.Dtp.OrderStatus) input.ReadEnum();
                break;
              }
              case 90: {
                OrderTime = input.ReadString();
                break;
              }
              case 98: {
                AccountNo = input.ReadString();
                break;
              }
              case 106: {
                AverageFillPrice = input.ReadString();
                break;
              }
              case 112: {
                TotalFillQuantity = input.ReadUInt32();
                break;
              }
              case 122: {
                TotalFillAmount = input.ReadString();
                break;
              }
              case 130: {
                FreezeAmount = input.ReadString();
                break;
              }
              case 138: {
                ClearAmount = input.ReadString();
                break;
              }
              case 144: {
                TotalCancelledQuantity = input.ReadUInt32();
                break;
              }
              case 154: {
                StatusMessage = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  /// <summary>
  /// MUST: RequestHeader.api_id = 10003002
  /// </summary>
  public sealed partial class QueryFillsRequest : pb::IMessage<QueryFillsRequest> {
    private static readonly pb::MessageParser<QueryFillsRequest> _parser = new pb::MessageParser<QueryFillsRequest>(() => new QueryFillsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryFillsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dwjk.Dtp.DtpApiReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryFillsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryFillsRequest(QueryFillsRequest other) : this() {
      accountNo_ = other.accountNo_;
      orderExchangeId_ = other.orderExchangeId_;
      Pagination = other.pagination_ != null ? other.Pagination.Clone() : null;
      exchange_ = other.exchange_;
      code_ = other.code_;
      orderOriginalId_ = other.orderOriginalId_;
      orderSide_ = other.orderSide_;
      includeCancelFill_ = other.includeCancelFill_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryFillsRequest Clone() {
      return new QueryFillsRequest(this);
    }

    /// <summary>Field number for the "account_no" field.</summary>
    public const int AccountNoFieldNumber = 1;
    private string accountNo_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccountNo {
      get { return accountNo_; }
      set {
        accountNo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "order_exchange_id" field.</summary>
    public const int OrderExchangeIdFieldNumber = 2;
    private string orderExchangeId_ = "";
    /// <summary>
    /// 空则查询全部
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderExchangeId {
      get { return orderExchangeId_; }
      set {
        orderExchangeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pagination" field.</summary>
    public const int PaginationFieldNumber = 3;
    private global::Dwjk.Dtp.QueryPagination pagination_;
    /// <summary>
    /// 查询结果分页标识
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Dwjk.Dtp.QueryPagination Pagination {
      get { return pagination_; }
      set {
        pagination_ = value;
      }
    }

    /// <summary>Field number for the "exchange" field.</summary>
    public const int ExchangeFieldNumber = 4;
    private global::Dwjk.Dtp.Exchange exchange_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Dwjk.Dtp.Exchange Exchange {
      get { return exchange_; }
      set {
        exchange_ = value;
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 5;
    private string code_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "order_original_id" field.</summary>
    public const int OrderOriginalIdFieldNumber = 6;
    private string orderOriginalId_ = "";
    /// <summary>
    /// 空则查询全部
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderOriginalId {
      get { return orderOriginalId_; }
      set {
        orderOriginalId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "order_side" field.</summary>
    public const int OrderSideFieldNumber = 7;
    private global::Dwjk.Dtp.OrderSide orderSide_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Dwjk.Dtp.OrderSide OrderSide {
      get { return orderSide_; }
      set {
        orderSide_ = value;
      }
    }

    /// <summary>Field number for the "include_cancel_fill" field.</summary>
    public const int IncludeCancelFillFieldNumber = 8;
    private bool includeCancelFill_;
    /// <summary>
    /// fasle 不包括撤单成交
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IncludeCancelFill {
      get { return includeCancelFill_; }
      set {
        includeCancelFill_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryFillsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryFillsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountNo != other.AccountNo) return false;
      if (OrderExchangeId != other.OrderExchangeId) return false;
      if (!object.Equals(Pagination, other.Pagination)) return false;
      if (Exchange != other.Exchange) return false;
      if (Code != other.Code) return false;
      if (OrderOriginalId != other.OrderOriginalId) return false;
      if (OrderSide != other.OrderSide) return false;
      if (IncludeCancelFill != other.IncludeCancelFill) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccountNo.Length != 0) hash ^= AccountNo.GetHashCode();
      if (OrderExchangeId.Length != 0) hash ^= OrderExchangeId.GetHashCode();
      if (pagination_ != null) hash ^= Pagination.GetHashCode();
      if (Exchange != 0) hash ^= Exchange.GetHashCode();
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      if (OrderOriginalId.Length != 0) hash ^= OrderOriginalId.GetHashCode();
      if (OrderSide != 0) hash ^= OrderSide.GetHashCode();
      if (IncludeCancelFill != false) hash ^= IncludeCancelFill.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AccountNo.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AccountNo);
      }
      if (OrderExchangeId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(OrderExchangeId);
      }
      if (pagination_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Pagination);
      }
      if (Exchange != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Exchange);
      }
      if (Code.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Code);
      }
      if (OrderOriginalId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(OrderOriginalId);
      }
      if (OrderSide != 0) {
        output.WriteRawTag(56);
        output.WriteEnum((int) OrderSide);
      }
      if (IncludeCancelFill != false) {
        output.WriteRawTag(64);
        output.WriteBool(IncludeCancelFill);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccountNo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountNo);
      }
      if (OrderExchangeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderExchangeId);
      }
      if (pagination_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pagination);
      }
      if (Exchange != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Exchange);
      }
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (OrderOriginalId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderOriginalId);
      }
      if (OrderSide != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OrderSide);
      }
      if (IncludeCancelFill != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryFillsRequest other) {
      if (other == null) {
        return;
      }
      if (other.AccountNo.Length != 0) {
        AccountNo = other.AccountNo;
      }
      if (other.OrderExchangeId.Length != 0) {
        OrderExchangeId = other.OrderExchangeId;
      }
      if (other.pagination_ != null) {
        if (pagination_ == null) {
          pagination_ = new global::Dwjk.Dtp.QueryPagination();
        }
        Pagination.MergeFrom(other.Pagination);
      }
      if (other.Exchange != 0) {
        Exchange = other.Exchange;
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
      if (other.OrderOriginalId.Length != 0) {
        OrderOriginalId = other.OrderOriginalId;
      }
      if (other.OrderSide != 0) {
        OrderSide = other.OrderSide;
      }
      if (other.IncludeCancelFill != false) {
        IncludeCancelFill = other.IncludeCancelFill;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AccountNo = input.ReadString();
            break;
          }
          case 18: {
            OrderExchangeId = input.ReadString();
            break;
          }
          case 26: {
            if (pagination_ == null) {
              pagination_ = new global::Dwjk.Dtp.QueryPagination();
            }
            input.ReadMessage(pagination_);
            break;
          }
          case 32: {
            exchange_ = (global::Dwjk.Dtp.Exchange) input.ReadEnum();
            break;
          }
          case 42: {
            Code = input.ReadString();
            break;
          }
          case 50: {
            OrderOriginalId = input.ReadString();
            break;
          }
          case 56: {
            orderSide_ = (global::Dwjk.Dtp.OrderSide) input.ReadEnum();
            break;
          }
          case 64: {
            IncludeCancelFill = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// MUST: ResponseHeader.api_id = 11003002
  /// </summary>
  public sealed partial class QueryFillsResponse : pb::IMessage<QueryFillsResponse> {
    private static readonly pb::MessageParser<QueryFillsResponse> _parser = new pb::MessageParser<QueryFillsResponse>(() => new QueryFillsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryFillsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dwjk.Dtp.DtpApiReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryFillsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryFillsResponse(QueryFillsResponse other) : this() {
      fillList_ = other.fillList_.Clone();
      Pagination = other.pagination_ != null ? other.Pagination.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryFillsResponse Clone() {
      return new QueryFillsResponse(this);
    }

    /// <summary>Field number for the "fill_list" field.</summary>
    public const int FillListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Dwjk.Dtp.QueryFillsResponse.Types.Fill> _repeated_fillList_codec
        = pb::FieldCodec.ForMessage(10, global::Dwjk.Dtp.QueryFillsResponse.Types.Fill.Parser);
    private readonly pbc::RepeatedField<global::Dwjk.Dtp.QueryFillsResponse.Types.Fill> fillList_ = new pbc::RepeatedField<global::Dwjk.Dtp.QueryFillsResponse.Types.Fill>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Dwjk.Dtp.QueryFillsResponse.Types.Fill> FillList {
      get { return fillList_; }
    }

    /// <summary>Field number for the "pagination" field.</summary>
    public const int PaginationFieldNumber = 2;
    private global::Dwjk.Dtp.QueryPagination pagination_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Dwjk.Dtp.QueryPagination Pagination {
      get { return pagination_; }
      set {
        pagination_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryFillsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryFillsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!fillList_.Equals(other.fillList_)) return false;
      if (!object.Equals(Pagination, other.Pagination)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= fillList_.GetHashCode();
      if (pagination_ != null) hash ^= Pagination.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      fillList_.WriteTo(output, _repeated_fillList_codec);
      if (pagination_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pagination);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += fillList_.CalculateSize(_repeated_fillList_codec);
      if (pagination_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pagination);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryFillsResponse other) {
      if (other == null) {
        return;
      }
      fillList_.Add(other.fillList_);
      if (other.pagination_ != null) {
        if (pagination_ == null) {
          pagination_ = new global::Dwjk.Dtp.QueryPagination();
        }
        Pagination.MergeFrom(other.Pagination);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            fillList_.AddEntriesFrom(input, _repeated_fillList_codec);
            break;
          }
          case 18: {
            if (pagination_ == null) {
              pagination_ = new global::Dwjk.Dtp.QueryPagination();
            }
            input.ReadMessage(pagination_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the QueryFillsResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Fill : pb::IMessage<Fill> {
        private static readonly pb::MessageParser<Fill> _parser = new pb::MessageParser<Fill>(() => new Fill());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Fill> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Dwjk.Dtp.QueryFillsResponse.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Fill() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Fill(Fill other) : this() {
          fillExchangeId_ = other.fillExchangeId_;
          fillTime_ = other.fillTime_;
          fillStatus_ = other.fillStatus_;
          fillPrice_ = other.fillPrice_;
          fillQuantity_ = other.fillQuantity_;
          fillAmount_ = other.fillAmount_;
          clearAmount_ = other.clearAmount_;
          orderExchangeId_ = other.orderExchangeId_;
          orderOriginalId_ = other.orderOriginalId_;
          exchange_ = other.exchange_;
          code_ = other.code_;
          name_ = other.name_;
          orderSide_ = other.orderSide_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Fill Clone() {
          return new Fill(this);
        }

        /// <summary>Field number for the "fill_exchange_id" field.</summary>
        public const int FillExchangeIdFieldNumber = 1;
        private string fillExchangeId_ = "";
        /// <summary>
        /// 交易所成交编号
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string FillExchangeId {
          get { return fillExchangeId_; }
          set {
            fillExchangeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "fill_time" field.</summary>
        public const int FillTimeFieldNumber = 2;
        private string fillTime_ = "";
        /// <summary>
        /// 成交的时间,单位毫秒,不存日期 ;顶点柜台返回的是 HH:MM:SS 格式，推断交易所返回的也是这个格式，所以改成字符串格式 yinwb
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string FillTime {
          get { return fillTime_; }
          set {
            fillTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "fill_status" field.</summary>
        public const int FillStatusFieldNumber = 3;
        private global::Dwjk.Dtp.FillStatus fillStatus_ = 0;
        /// <summary>
        /// (TBD: 同上FillReport)成交状态 0:未知 1:成交 2:撤单 3: 废单 4:确认 (TBD: 可能来自'撤销标志') *** 只有撤单和成交两个状态
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Dwjk.Dtp.FillStatus FillStatus {
          get { return fillStatus_; }
          set {
            fillStatus_ = value;
          }
        }

        /// <summary>Field number for the "fill_price" field.</summary>
        public const int FillPriceFieldNumber = 4;
        private string fillPrice_ = "";
        /// <summary>
        /// 本次成交价格
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string FillPrice {
          get { return fillPrice_; }
          set {
            fillPrice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "fill_quantity" field.</summary>
        public const int FillQuantityFieldNumber = 5;
        private uint fillQuantity_;
        /// <summary>
        /// 本次成交数量; fill_status为撤单时，此数值为撤单数量
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint FillQuantity {
          get { return fillQuantity_; }
          set {
            fillQuantity_ = value;
          }
        }

        /// <summary>Field number for the "fill_amount" field.</summary>
        public const int FillAmountFieldNumber = 6;
        private string fillAmount_ = "";
        /// <summary>
        /// 本次成交金额
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string FillAmount {
          get { return fillAmount_; }
          set {
            fillAmount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "clear_amount" field.</summary>
        public const int ClearAmountFieldNumber = 7;
        private string clearAmount_ = "";
        /// <summary>
        /// 本次清算资金(委托为卖出方向时表示本次成交新增的可用资金)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ClearAmount {
          get { return clearAmount_; }
          set {
            clearAmount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "order_exchange_id" field.</summary>
        public const int OrderExchangeIdFieldNumber = 8;
        private string orderExchangeId_ = "";
        /// <summary>
        /// 交易所委托号
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string OrderExchangeId {
          get { return orderExchangeId_; }
          set {
            orderExchangeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "order_original_id" field.</summary>
        public const int OrderOriginalIdFieldNumber = 9;
        private string orderOriginalId_ = "";
        /// <summary>
        /// 客户委托号
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string OrderOriginalId {
          get { return orderOriginalId_; }
          set {
            orderOriginalId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "exchange" field.</summary>
        public const int ExchangeFieldNumber = 10;
        private global::Dwjk.Dtp.Exchange exchange_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Dwjk.Dtp.Exchange Exchange {
          get { return exchange_; }
          set {
            exchange_ = value;
          }
        }

        /// <summary>Field number for the "code" field.</summary>
        public const int CodeFieldNumber = 11;
        private string code_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Code {
          get { return code_; }
          set {
            code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 12;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "order_side" field.</summary>
        public const int OrderSideFieldNumber = 13;
        private global::Dwjk.Dtp.OrderSide orderSide_ = 0;
        /// <summary>
        /// 委托竞价方向
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Dwjk.Dtp.OrderSide OrderSide {
          get { return orderSide_; }
          set {
            orderSide_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Fill);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Fill other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (FillExchangeId != other.FillExchangeId) return false;
          if (FillTime != other.FillTime) return false;
          if (FillStatus != other.FillStatus) return false;
          if (FillPrice != other.FillPrice) return false;
          if (FillQuantity != other.FillQuantity) return false;
          if (FillAmount != other.FillAmount) return false;
          if (ClearAmount != other.ClearAmount) return false;
          if (OrderExchangeId != other.OrderExchangeId) return false;
          if (OrderOriginalId != other.OrderOriginalId) return false;
          if (Exchange != other.Exchange) return false;
          if (Code != other.Code) return false;
          if (Name != other.Name) return false;
          if (OrderSide != other.OrderSide) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (FillExchangeId.Length != 0) hash ^= FillExchangeId.GetHashCode();
          if (FillTime.Length != 0) hash ^= FillTime.GetHashCode();
          if (FillStatus != 0) hash ^= FillStatus.GetHashCode();
          if (FillPrice.Length != 0) hash ^= FillPrice.GetHashCode();
          if (FillQuantity != 0) hash ^= FillQuantity.GetHashCode();
          if (FillAmount.Length != 0) hash ^= FillAmount.GetHashCode();
          if (ClearAmount.Length != 0) hash ^= ClearAmount.GetHashCode();
          if (OrderExchangeId.Length != 0) hash ^= OrderExchangeId.GetHashCode();
          if (OrderOriginalId.Length != 0) hash ^= OrderOriginalId.GetHashCode();
          if (Exchange != 0) hash ^= Exchange.GetHashCode();
          if (Code.Length != 0) hash ^= Code.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (OrderSide != 0) hash ^= OrderSide.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (FillExchangeId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(FillExchangeId);
          }
          if (FillTime.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(FillTime);
          }
          if (FillStatus != 0) {
            output.WriteRawTag(24);
            output.WriteEnum((int) FillStatus);
          }
          if (FillPrice.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(FillPrice);
          }
          if (FillQuantity != 0) {
            output.WriteRawTag(40);
            output.WriteUInt32(FillQuantity);
          }
          if (FillAmount.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(FillAmount);
          }
          if (ClearAmount.Length != 0) {
            output.WriteRawTag(58);
            output.WriteString(ClearAmount);
          }
          if (OrderExchangeId.Length != 0) {
            output.WriteRawTag(66);
            output.WriteString(OrderExchangeId);
          }
          if (OrderOriginalId.Length != 0) {
            output.WriteRawTag(74);
            output.WriteString(OrderOriginalId);
          }
          if (Exchange != 0) {
            output.WriteRawTag(80);
            output.WriteEnum((int) Exchange);
          }
          if (Code.Length != 0) {
            output.WriteRawTag(90);
            output.WriteString(Code);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(98);
            output.WriteString(Name);
          }
          if (OrderSide != 0) {
            output.WriteRawTag(104);
            output.WriteEnum((int) OrderSide);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (FillExchangeId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(FillExchangeId);
          }
          if (FillTime.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(FillTime);
          }
          if (FillStatus != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FillStatus);
          }
          if (FillPrice.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(FillPrice);
          }
          if (FillQuantity != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FillQuantity);
          }
          if (FillAmount.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(FillAmount);
          }
          if (ClearAmount.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ClearAmount);
          }
          if (OrderExchangeId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderExchangeId);
          }
          if (OrderOriginalId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderOriginalId);
          }
          if (Exchange != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Exchange);
          }
          if (Code.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (OrderSide != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OrderSide);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Fill other) {
          if (other == null) {
            return;
          }
          if (other.FillExchangeId.Length != 0) {
            FillExchangeId = other.FillExchangeId;
          }
          if (other.FillTime.Length != 0) {
            FillTime = other.FillTime;
          }
          if (other.FillStatus != 0) {
            FillStatus = other.FillStatus;
          }
          if (other.FillPrice.Length != 0) {
            FillPrice = other.FillPrice;
          }
          if (other.FillQuantity != 0) {
            FillQuantity = other.FillQuantity;
          }
          if (other.FillAmount.Length != 0) {
            FillAmount = other.FillAmount;
          }
          if (other.ClearAmount.Length != 0) {
            ClearAmount = other.ClearAmount;
          }
          if (other.OrderExchangeId.Length != 0) {
            OrderExchangeId = other.OrderExchangeId;
          }
          if (other.OrderOriginalId.Length != 0) {
            OrderOriginalId = other.OrderOriginalId;
          }
          if (other.Exchange != 0) {
            Exchange = other.Exchange;
          }
          if (other.Code.Length != 0) {
            Code = other.Code;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.OrderSide != 0) {
            OrderSide = other.OrderSide;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                FillExchangeId = input.ReadString();
                break;
              }
              case 18: {
                FillTime = input.ReadString();
                break;
              }
              case 24: {
                fillStatus_ = (global::Dwjk.Dtp.FillStatus) input.ReadEnum();
                break;
              }
              case 34: {
                FillPrice = input.ReadString();
                break;
              }
              case 40: {
                FillQuantity = input.ReadUInt32();
                break;
              }
              case 50: {
                FillAmount = input.ReadString();
                break;
              }
              case 58: {
                ClearAmount = input.ReadString();
                break;
              }
              case 66: {
                OrderExchangeId = input.ReadString();
                break;
              }
              case 74: {
                OrderOriginalId = input.ReadString();
                break;
              }
              case 80: {
                exchange_ = (global::Dwjk.Dtp.Exchange) input.ReadEnum();
                break;
              }
              case 90: {
                Code = input.ReadString();
                break;
              }
              case 98: {
                Name = input.ReadString();
                break;
              }
              case 104: {
                orderSide_ = (global::Dwjk.Dtp.OrderSide) input.ReadEnum();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  /// <summary>
  /// MUST: RequestHeader.api_id = 10003003
  /// </summary>
  public sealed partial class QueryCapitalRequest : pb::IMessage<QueryCapitalRequest> {
    private static readonly pb::MessageParser<QueryCapitalRequest> _parser = new pb::MessageParser<QueryCapitalRequest>(() => new QueryCapitalRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryCapitalRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dwjk.Dtp.DtpApiReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryCapitalRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryCapitalRequest(QueryCapitalRequest other) : this() {
      accountNo_ = other.accountNo_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryCapitalRequest Clone() {
      return new QueryCapitalRequest(this);
    }

    /// <summary>Field number for the "account_no" field.</summary>
    public const int AccountNoFieldNumber = 1;
    private string accountNo_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccountNo {
      get { return accountNo_; }
      set {
        accountNo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryCapitalRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryCapitalRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountNo != other.AccountNo) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccountNo.Length != 0) hash ^= AccountNo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AccountNo.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AccountNo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccountNo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountNo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryCapitalRequest other) {
      if (other == null) {
        return;
      }
      if (other.AccountNo.Length != 0) {
        AccountNo = other.AccountNo;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AccountNo = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// MUST: ResponseHeader.api_id = 11003003
  /// </summary>
  public sealed partial class QueryCapitalResponse : pb::IMessage<QueryCapitalResponse> {
    private static readonly pb::MessageParser<QueryCapitalResponse> _parser = new pb::MessageParser<QueryCapitalResponse>(() => new QueryCapitalResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryCapitalResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dwjk.Dtp.DtpApiReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryCapitalResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryCapitalResponse(QueryCapitalResponse other) : this() {
      accountNo_ = other.accountNo_;
      balance_ = other.balance_;
      available_ = other.available_;
      freeze_ = other.freeze_;
      securities_ = other.securities_;
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryCapitalResponse Clone() {
      return new QueryCapitalResponse(this);
    }

    /// <summary>Field number for the "account_no" field.</summary>
    public const int AccountNoFieldNumber = 1;
    private string accountNo_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccountNo {
      get { return accountNo_; }
      set {
        accountNo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "balance" field.</summary>
    public const int BalanceFieldNumber = 2;
    private string balance_ = "";
    /// <summary>
    /// 账户余额
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Balance {
      get { return balance_; }
      set {
        balance_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "available" field.</summary>
    public const int AvailableFieldNumber = 3;
    private string available_ = "";
    /// <summary>
    /// 可用资金
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Available {
      get { return available_; }
      set {
        available_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "freeze" field.</summary>
    public const int FreezeFieldNumber = 4;
    private string freeze_ = "";
    /// <summary>
    /// 冻结金额
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Freeze {
      get { return freeze_; }
      set {
        freeze_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "securities" field.</summary>
    public const int SecuritiesFieldNumber = 5;
    private string securities_ = "";
    /// <summary>
    /// 证券市值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Securities {
      get { return securities_; }
      set {
        securities_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 6;
    private string total_ = "";
    /// <summary>
    /// 总资产
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Total {
      get { return total_; }
      set {
        total_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryCapitalResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryCapitalResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountNo != other.AccountNo) return false;
      if (Balance != other.Balance) return false;
      if (Available != other.Available) return false;
      if (Freeze != other.Freeze) return false;
      if (Securities != other.Securities) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccountNo.Length != 0) hash ^= AccountNo.GetHashCode();
      if (Balance.Length != 0) hash ^= Balance.GetHashCode();
      if (Available.Length != 0) hash ^= Available.GetHashCode();
      if (Freeze.Length != 0) hash ^= Freeze.GetHashCode();
      if (Securities.Length != 0) hash ^= Securities.GetHashCode();
      if (Total.Length != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AccountNo.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AccountNo);
      }
      if (Balance.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Balance);
      }
      if (Available.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Available);
      }
      if (Freeze.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Freeze);
      }
      if (Securities.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Securities);
      }
      if (Total.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccountNo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountNo);
      }
      if (Balance.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Balance);
      }
      if (Available.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Available);
      }
      if (Freeze.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Freeze);
      }
      if (Securities.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Securities);
      }
      if (Total.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryCapitalResponse other) {
      if (other == null) {
        return;
      }
      if (other.AccountNo.Length != 0) {
        AccountNo = other.AccountNo;
      }
      if (other.Balance.Length != 0) {
        Balance = other.Balance;
      }
      if (other.Available.Length != 0) {
        Available = other.Available;
      }
      if (other.Freeze.Length != 0) {
        Freeze = other.Freeze;
      }
      if (other.Securities.Length != 0) {
        Securities = other.Securities;
      }
      if (other.Total.Length != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AccountNo = input.ReadString();
            break;
          }
          case 18: {
            Balance = input.ReadString();
            break;
          }
          case 26: {
            Available = input.ReadString();
            break;
          }
          case 34: {
            Freeze = input.ReadString();
            break;
          }
          case 42: {
            Securities = input.ReadString();
            break;
          }
          case 50: {
            Total = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// MUST: RequestHeader.api_id = 10003004
  /// </summary>
  public sealed partial class QueryPositionRequest : pb::IMessage<QueryPositionRequest> {
    private static readonly pb::MessageParser<QueryPositionRequest> _parser = new pb::MessageParser<QueryPositionRequest>(() => new QueryPositionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryPositionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dwjk.Dtp.DtpApiReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryPositionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryPositionRequest(QueryPositionRequest other) : this() {
      accountNo_ = other.accountNo_;
      exchange_ = other.exchange_;
      code_ = other.code_;
      Pagination = other.pagination_ != null ? other.Pagination.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryPositionRequest Clone() {
      return new QueryPositionRequest(this);
    }

    /// <summary>Field number for the "account_no" field.</summary>
    public const int AccountNoFieldNumber = 1;
    private string accountNo_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccountNo {
      get { return accountNo_; }
      set {
        accountNo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "exchange" field.</summary>
    public const int ExchangeFieldNumber = 2;
    private global::Dwjk.Dtp.Exchange exchange_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Dwjk.Dtp.Exchange Exchange {
      get { return exchange_; }
      set {
        exchange_ = value;
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 3;
    private string code_ = "";
    /// <summary>
    /// 为空时查询全部
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pagination" field.</summary>
    public const int PaginationFieldNumber = 4;
    private global::Dwjk.Dtp.QueryPagination pagination_;
    /// <summary>
    /// 查询结果分页标识
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Dwjk.Dtp.QueryPagination Pagination {
      get { return pagination_; }
      set {
        pagination_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryPositionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryPositionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountNo != other.AccountNo) return false;
      if (Exchange != other.Exchange) return false;
      if (Code != other.Code) return false;
      if (!object.Equals(Pagination, other.Pagination)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccountNo.Length != 0) hash ^= AccountNo.GetHashCode();
      if (Exchange != 0) hash ^= Exchange.GetHashCode();
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      if (pagination_ != null) hash ^= Pagination.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AccountNo.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AccountNo);
      }
      if (Exchange != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Exchange);
      }
      if (Code.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Code);
      }
      if (pagination_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Pagination);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccountNo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountNo);
      }
      if (Exchange != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Exchange);
      }
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (pagination_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pagination);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryPositionRequest other) {
      if (other == null) {
        return;
      }
      if (other.AccountNo.Length != 0) {
        AccountNo = other.AccountNo;
      }
      if (other.Exchange != 0) {
        Exchange = other.Exchange;
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
      if (other.pagination_ != null) {
        if (pagination_ == null) {
          pagination_ = new global::Dwjk.Dtp.QueryPagination();
        }
        Pagination.MergeFrom(other.Pagination);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AccountNo = input.ReadString();
            break;
          }
          case 16: {
            exchange_ = (global::Dwjk.Dtp.Exchange) input.ReadEnum();
            break;
          }
          case 26: {
            Code = input.ReadString();
            break;
          }
          case 34: {
            if (pagination_ == null) {
              pagination_ = new global::Dwjk.Dtp.QueryPagination();
            }
            input.ReadMessage(pagination_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// MUST: ResponseHeader.api_id = 11003004
  /// </summary>
  public sealed partial class QueryPositionResponse : pb::IMessage<QueryPositionResponse> {
    private static readonly pb::MessageParser<QueryPositionResponse> _parser = new pb::MessageParser<QueryPositionResponse>(() => new QueryPositionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryPositionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dwjk.Dtp.DtpApiReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryPositionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryPositionResponse(QueryPositionResponse other) : this() {
      positionList_ = other.positionList_.Clone();
      Pagination = other.pagination_ != null ? other.Pagination.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryPositionResponse Clone() {
      return new QueryPositionResponse(this);
    }

    /// <summary>Field number for the "position_list" field.</summary>
    public const int PositionListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Dwjk.Dtp.QueryPositionResponse.Types.PositionDetail> _repeated_positionList_codec
        = pb::FieldCodec.ForMessage(10, global::Dwjk.Dtp.QueryPositionResponse.Types.PositionDetail.Parser);
    private readonly pbc::RepeatedField<global::Dwjk.Dtp.QueryPositionResponse.Types.PositionDetail> positionList_ = new pbc::RepeatedField<global::Dwjk.Dtp.QueryPositionResponse.Types.PositionDetail>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Dwjk.Dtp.QueryPositionResponse.Types.PositionDetail> PositionList {
      get { return positionList_; }
    }

    /// <summary>Field number for the "pagination" field.</summary>
    public const int PaginationFieldNumber = 2;
    private global::Dwjk.Dtp.QueryPagination pagination_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Dwjk.Dtp.QueryPagination Pagination {
      get { return pagination_; }
      set {
        pagination_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryPositionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryPositionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!positionList_.Equals(other.positionList_)) return false;
      if (!object.Equals(Pagination, other.Pagination)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= positionList_.GetHashCode();
      if (pagination_ != null) hash ^= Pagination.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      positionList_.WriteTo(output, _repeated_positionList_codec);
      if (pagination_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pagination);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += positionList_.CalculateSize(_repeated_positionList_codec);
      if (pagination_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pagination);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryPositionResponse other) {
      if (other == null) {
        return;
      }
      positionList_.Add(other.positionList_);
      if (other.pagination_ != null) {
        if (pagination_ == null) {
          pagination_ = new global::Dwjk.Dtp.QueryPagination();
        }
        Pagination.MergeFrom(other.Pagination);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            positionList_.AddEntriesFrom(input, _repeated_positionList_codec);
            break;
          }
          case 18: {
            if (pagination_ == null) {
              pagination_ = new global::Dwjk.Dtp.QueryPagination();
            }
            input.ReadMessage(pagination_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the QueryPositionResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class PositionDetail : pb::IMessage<PositionDetail> {
        private static readonly pb::MessageParser<PositionDetail> _parser = new pb::MessageParser<PositionDetail>(() => new PositionDetail());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PositionDetail> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Dwjk.Dtp.QueryPositionResponse.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PositionDetail() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PositionDetail(PositionDetail other) : this() {
          exchange_ = other.exchange_;
          code_ = other.code_;
          name_ = other.name_;
          balance_ = other.balance_;
          availableQuantity_ = other.availableQuantity_;
          freezeQuantity_ = other.freezeQuantity_;
          buyQuantity_ = other.buyQuantity_;
          sellQuantity_ = other.sellQuantity_;
          marketValue_ = other.marketValue_;
          cost_ = other.cost_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PositionDetail Clone() {
          return new PositionDetail(this);
        }

        /// <summary>Field number for the "exchange" field.</summary>
        public const int ExchangeFieldNumber = 1;
        private global::Dwjk.Dtp.Exchange exchange_ = 0;
        /// <summary>
        /// 交易所
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Dwjk.Dtp.Exchange Exchange {
          get { return exchange_; }
          set {
            exchange_ = value;
          }
        }

        /// <summary>Field number for the "code" field.</summary>
        public const int CodeFieldNumber = 2;
        private string code_ = "";
        /// <summary>
        /// 证券代码
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Code {
          get { return code_; }
          set {
            code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 3;
        private string name_ = "";
        /// <summary>
        /// 证券名称
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "balance" field.</summary>
        public const int BalanceFieldNumber = 4;
        private long balance_;
        /// <summary>
        /// 剩余数量(今持仓量)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long Balance {
          get { return balance_; }
          set {
            balance_ = value;
          }
        }

        /// <summary>Field number for the "available_quantity" field.</summary>
        public const int AvailableQuantityFieldNumber = 5;
        private long availableQuantity_;
        /// <summary>
        /// 可用数量(可卖出数量)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long AvailableQuantity {
          get { return availableQuantity_; }
          set {
            availableQuantity_ = value;
          }
        }

        /// <summary>Field number for the "freeze_quantity" field.</summary>
        public const int FreezeQuantityFieldNumber = 6;
        private int freezeQuantity_;
        /// <summary>
        /// 冻结数量(可能是真正的冻结数量，例如：司法冻结等)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int FreezeQuantity {
          get { return freezeQuantity_; }
          set {
            freezeQuantity_ = value;
          }
        }

        /// <summary>Field number for the "buy_quantity" field.</summary>
        public const int BuyQuantityFieldNumber = 7;
        private long buyQuantity_;
        /// <summary>
        /// 当日买入数量
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long BuyQuantity {
          get { return buyQuantity_; }
          set {
            buyQuantity_ = value;
          }
        }

        /// <summary>Field number for the "sell_quantity" field.</summary>
        public const int SellQuantityFieldNumber = 8;
        private long sellQuantity_;
        /// <summary>
        /// 当日卖出数量
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long SellQuantity {
          get { return sellQuantity_; }
          set {
            sellQuantity_ = value;
          }
        }

        /// <summary>Field number for the "market_value" field.</summary>
        public const int MarketValueFieldNumber = 9;
        private string marketValue_ = "";
        /// <summary>
        /// 最新市值
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string MarketValue {
          get { return marketValue_; }
          set {
            marketValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "cost" field.</summary>
        public const int CostFieldNumber = 10;
        private string cost_ = "";
        /// <summary>
        /// 持仓均价
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Cost {
          get { return cost_; }
          set {
            cost_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PositionDetail);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PositionDetail other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Exchange != other.Exchange) return false;
          if (Code != other.Code) return false;
          if (Name != other.Name) return false;
          if (Balance != other.Balance) return false;
          if (AvailableQuantity != other.AvailableQuantity) return false;
          if (FreezeQuantity != other.FreezeQuantity) return false;
          if (BuyQuantity != other.BuyQuantity) return false;
          if (SellQuantity != other.SellQuantity) return false;
          if (MarketValue != other.MarketValue) return false;
          if (Cost != other.Cost) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Exchange != 0) hash ^= Exchange.GetHashCode();
          if (Code.Length != 0) hash ^= Code.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (Balance != 0L) hash ^= Balance.GetHashCode();
          if (AvailableQuantity != 0L) hash ^= AvailableQuantity.GetHashCode();
          if (FreezeQuantity != 0) hash ^= FreezeQuantity.GetHashCode();
          if (BuyQuantity != 0L) hash ^= BuyQuantity.GetHashCode();
          if (SellQuantity != 0L) hash ^= SellQuantity.GetHashCode();
          if (MarketValue.Length != 0) hash ^= MarketValue.GetHashCode();
          if (Cost.Length != 0) hash ^= Cost.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Exchange != 0) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Exchange);
          }
          if (Code.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Code);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Name);
          }
          if (Balance != 0L) {
            output.WriteRawTag(32);
            output.WriteInt64(Balance);
          }
          if (AvailableQuantity != 0L) {
            output.WriteRawTag(40);
            output.WriteInt64(AvailableQuantity);
          }
          if (FreezeQuantity != 0) {
            output.WriteRawTag(48);
            output.WriteInt32(FreezeQuantity);
          }
          if (BuyQuantity != 0L) {
            output.WriteRawTag(56);
            output.WriteInt64(BuyQuantity);
          }
          if (SellQuantity != 0L) {
            output.WriteRawTag(64);
            output.WriteInt64(SellQuantity);
          }
          if (MarketValue.Length != 0) {
            output.WriteRawTag(74);
            output.WriteString(MarketValue);
          }
          if (Cost.Length != 0) {
            output.WriteRawTag(82);
            output.WriteString(Cost);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Exchange != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Exchange);
          }
          if (Code.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (Balance != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Balance);
          }
          if (AvailableQuantity != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(AvailableQuantity);
          }
          if (FreezeQuantity != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(FreezeQuantity);
          }
          if (BuyQuantity != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(BuyQuantity);
          }
          if (SellQuantity != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(SellQuantity);
          }
          if (MarketValue.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(MarketValue);
          }
          if (Cost.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Cost);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PositionDetail other) {
          if (other == null) {
            return;
          }
          if (other.Exchange != 0) {
            Exchange = other.Exchange;
          }
          if (other.Code.Length != 0) {
            Code = other.Code;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.Balance != 0L) {
            Balance = other.Balance;
          }
          if (other.AvailableQuantity != 0L) {
            AvailableQuantity = other.AvailableQuantity;
          }
          if (other.FreezeQuantity != 0) {
            FreezeQuantity = other.FreezeQuantity;
          }
          if (other.BuyQuantity != 0L) {
            BuyQuantity = other.BuyQuantity;
          }
          if (other.SellQuantity != 0L) {
            SellQuantity = other.SellQuantity;
          }
          if (other.MarketValue.Length != 0) {
            MarketValue = other.MarketValue;
          }
          if (other.Cost.Length != 0) {
            Cost = other.Cost;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                exchange_ = (global::Dwjk.Dtp.Exchange) input.ReadEnum();
                break;
              }
              case 18: {
                Code = input.ReadString();
                break;
              }
              case 26: {
                Name = input.ReadString();
                break;
              }
              case 32: {
                Balance = input.ReadInt64();
                break;
              }
              case 40: {
                AvailableQuantity = input.ReadInt64();
                break;
              }
              case 48: {
                FreezeQuantity = input.ReadInt32();
                break;
              }
              case 56: {
                BuyQuantity = input.ReadInt64();
                break;
              }
              case 64: {
                SellQuantity = input.ReadInt64();
                break;
              }
              case 74: {
                MarketValue = input.ReadString();
                break;
              }
              case 82: {
                Cost = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  /// <summary>
  /// MUST: RequestHeader.api_id = 10005001
  /// </summary>
  public sealed partial class QueryRationRequest : pb::IMessage<QueryRationRequest> {
    private static readonly pb::MessageParser<QueryRationRequest> _parser = new pb::MessageParser<QueryRationRequest>(() => new QueryRationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryRationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dwjk.Dtp.DtpApiReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRationRequest(QueryRationRequest other) : this() {
      accountNo_ = other.accountNo_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRationRequest Clone() {
      return new QueryRationRequest(this);
    }

    /// <summary>Field number for the "account_no" field.</summary>
    public const int AccountNoFieldNumber = 1;
    private string accountNo_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccountNo {
      get { return accountNo_; }
      set {
        accountNo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryRationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryRationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountNo != other.AccountNo) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccountNo.Length != 0) hash ^= AccountNo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AccountNo.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AccountNo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccountNo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountNo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryRationRequest other) {
      if (other == null) {
        return;
      }
      if (other.AccountNo.Length != 0) {
        AccountNo = other.AccountNo;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AccountNo = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// MUST: ResponseHeader.api_id = 11005001
  /// </summary>
  public sealed partial class QueryRationResponse : pb::IMessage<QueryRationResponse> {
    private static readonly pb::MessageParser<QueryRationResponse> _parser = new pb::MessageParser<QueryRationResponse>(() => new QueryRationResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryRationResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dwjk.Dtp.DtpApiReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRationResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRationResponse(QueryRationResponse other) : this() {
      rationList_ = other.rationList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRationResponse Clone() {
      return new QueryRationResponse(this);
    }

    /// <summary>Field number for the "ration_list" field.</summary>
    public const int RationListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Dwjk.Dtp.QueryRationResponse.Types.Ration> _repeated_rationList_codec
        = pb::FieldCodec.ForMessage(10, global::Dwjk.Dtp.QueryRationResponse.Types.Ration.Parser);
    private readonly pbc::RepeatedField<global::Dwjk.Dtp.QueryRationResponse.Types.Ration> rationList_ = new pbc::RepeatedField<global::Dwjk.Dtp.QueryRationResponse.Types.Ration>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Dwjk.Dtp.QueryRationResponse.Types.Ration> RationList {
      get { return rationList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryRationResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryRationResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!rationList_.Equals(other.rationList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= rationList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      rationList_.WriteTo(output, _repeated_rationList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += rationList_.CalculateSize(_repeated_rationList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryRationResponse other) {
      if (other == null) {
        return;
      }
      rationList_.Add(other.rationList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            rationList_.AddEntriesFrom(input, _repeated_rationList_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the QueryRationResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Ration : pb::IMessage<Ration> {
        private static readonly pb::MessageParser<Ration> _parser = new pb::MessageParser<Ration>(() => new Ration());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Ration> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Dwjk.Dtp.QueryRationResponse.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Ration() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Ration(Ration other) : this() {
          accountNo_ = other.accountNo_;
          exchange_ = other.exchange_;
          quantity_ = other.quantity_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Ration Clone() {
          return new Ration(this);
        }

        /// <summary>Field number for the "account_no" field.</summary>
        public const int AccountNoFieldNumber = 1;
        private string accountNo_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string AccountNo {
          get { return accountNo_; }
          set {
            accountNo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "exchange" field.</summary>
        public const int ExchangeFieldNumber = 2;
        private global::Dwjk.Dtp.Exchange exchange_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Dwjk.Dtp.Exchange Exchange {
          get { return exchange_; }
          set {
            exchange_ = value;
          }
        }

        /// <summary>Field number for the "quantity" field.</summary>
        public const int QuantityFieldNumber = 3;
        private uint quantity_;
        /// <summary>
        ///权益数量
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Quantity {
          get { return quantity_; }
          set {
            quantity_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Ration);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Ration other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (AccountNo != other.AccountNo) return false;
          if (Exchange != other.Exchange) return false;
          if (Quantity != other.Quantity) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (AccountNo.Length != 0) hash ^= AccountNo.GetHashCode();
          if (Exchange != 0) hash ^= Exchange.GetHashCode();
          if (Quantity != 0) hash ^= Quantity.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (AccountNo.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(AccountNo);
          }
          if (Exchange != 0) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Exchange);
          }
          if (Quantity != 0) {
            output.WriteRawTag(24);
            output.WriteUInt32(Quantity);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (AccountNo.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountNo);
          }
          if (Exchange != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Exchange);
          }
          if (Quantity != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Quantity);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Ration other) {
          if (other == null) {
            return;
          }
          if (other.AccountNo.Length != 0) {
            AccountNo = other.AccountNo;
          }
          if (other.Exchange != 0) {
            Exchange = other.Exchange;
          }
          if (other.Quantity != 0) {
            Quantity = other.Quantity;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                AccountNo = input.ReadString();
                break;
              }
              case 16: {
                exchange_ = (global::Dwjk.Dtp.Exchange) input.ReadEnum();
                break;
              }
              case 24: {
                Quantity = input.ReadUInt32();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class QueryPagination : pb::IMessage<QueryPagination> {
    private static readonly pb::MessageParser<QueryPagination> _parser = new pb::MessageParser<QueryPagination>(() => new QueryPagination());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryPagination> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dwjk.Dtp.DtpApiReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryPagination() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryPagination(QueryPagination other) : this() {
      offset_ = other.offset_;
      size_ = other.size_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryPagination Clone() {
      return new QueryPagination(this);
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 1;
    private uint offset_;
    /// <summary>
    /// 起始位置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "size" field.</summary>
    public const int SizeFieldNumber = 2;
    private uint size_;
    /// <summary>
    /// 每页数据量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Size {
      get { return size_; }
      set {
        size_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryPagination);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryPagination other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Offset != other.Offset) return false;
      if (Size != other.Size) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Offset != 0) hash ^= Offset.GetHashCode();
      if (Size != 0) hash ^= Size.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Offset != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Offset);
      }
      if (Size != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Size);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Offset != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Offset);
      }
      if (Size != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Size);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryPagination other) {
      if (other == null) {
        return;
      }
      if (other.Offset != 0) {
        Offset = other.Offset;
      }
      if (other.Size != 0) {
        Size = other.Size;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Offset = input.ReadUInt32();
            break;
          }
          case 16: {
            Size = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
